{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RAHULBAID-png/EV-Market-Segmentation/blob/main/ev_sales_by_maker_and_cat_15-24.csv\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gwtURt8pFi3N",
        "outputId": "4ba3f2c0-f703-44e2-82e7-dd2d48bf3be9"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8c8460a8"
      },
      "source": [
        "# Task\n",
        "Analyze the Electric Vehicle market in India using Segmentation analysis and come up with a feasible strategy to enter the market, targeting the segments most likely to use Electric vehicles by using data from \"/content/drive/MyDrive/ev_sales_by_makers_and_cat_15-24.csv\"."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b995c9fa"
      },
      "source": [
        "## Load the data\n",
        "\n",
        "### Subtask:\n",
        "Load the `ev_sales_by_makers_and_cat_15-24.csv` file into a pandas DataFrame.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 588
        },
        "id": "6fc0975d",
        "outputId": "2984cd33-1a35-40e3-928b-dde2e51bed8f"
      },
      "source": [
        "import pandas as pd\n",
        "df_ev = pd.read_csv('/content/drive/MyDrive/ev_sales_by_makers_and_cat_15-24.csv')\n",
        "display(df_ev.head())\n",
        "display(df_ev.info())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  Cat                          Maker  2015  2016  2017  2018  2019  2020  \\\n",
              "0  3W    \"VOLVO GROUP INDIA PVT LTD\"     0     0    31    12     0     0   \n",
              "1  3W         3EV INDUSTRIES PVT LTD     0     0     0     0     0     0   \n",
              "2  2W         3GB TECHNOLOGY PVT LTD     0     0     0     1     0     0   \n",
              "3  3W         3GB TECHNOLOGY PVT LTD     0     1     1     0     0     0   \n",
              "4  3W  3S INDUSTRIES PRIVATE LIMITED     0     0     0     0    48    66   \n",
              "\n",
              "   2021  2022  2023  2024  \n",
              "0     0     0     0     0  \n",
              "1   112   390   545    51  \n",
              "2     0     0     0     0  \n",
              "3     0     0     0     0  \n",
              "4    43    68   266   578  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d8c158ef-560e-4ecc-be30-bc5e7afa3484\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cat</th>\n",
              "      <th>Maker</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>2023</th>\n",
              "      <th>2024</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3W</td>\n",
              "      <td>\"VOLVO GROUP INDIA PVT LTD\"</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3W</td>\n",
              "      <td>3EV INDUSTRIES PVT LTD</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>112</td>\n",
              "      <td>390</td>\n",
              "      <td>545</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3W</td>\n",
              "      <td>3S INDUSTRIES PRIVATE LIMITED</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>48</td>\n",
              "      <td>66</td>\n",
              "      <td>43</td>\n",
              "      <td>68</td>\n",
              "      <td>266</td>\n",
              "      <td>578</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8c158ef-560e-4ecc-be30-bc5e7afa3484')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d8c158ef-560e-4ecc-be30-bc5e7afa3484 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d8c158ef-560e-4ecc-be30-bc5e7afa3484');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4237a16f-6395-4191-8a84-44ef0a9d7216\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4237a16f-6395-4191-8a84-44ef0a9d7216')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4237a16f-6395-4191-8a84-44ef0a9d7216 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_ev\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Cat\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"2W\",\n          \"3W\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Maker\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"3EV INDUSTRIES PVT LTD\",\n          \"3S INDUSTRIES PRIVATE LIMITED\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 0,\n        \"max\": 31,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 12,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 0,\n        \"max\": 48,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 0,\n        \"max\": 66,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 48,\n        \"min\": 0,\n        \"max\": 112,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 169,\n        \"min\": 0,\n        \"max\": 390,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243,\n        \"min\": 0,\n        \"max\": 545,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 253,\n        \"min\": 0,\n        \"max\": 578,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1386 entries, 0 to 1385\n",
            "Data columns (total 12 columns):\n",
            " #   Column  Non-Null Count  Dtype \n",
            "---  ------  --------------  ----- \n",
            " 0   Cat     1386 non-null   object\n",
            " 1   Maker   1386 non-null   object\n",
            " 2   2015    1386 non-null   int64 \n",
            " 3   2016    1386 non-null   int64 \n",
            " 4   2017    1386 non-null   int64 \n",
            " 5   2018    1386 non-null   int64 \n",
            " 6   2019    1386 non-null   int64 \n",
            " 7   2020    1386 non-null   int64 \n",
            " 8   2021    1386 non-null   int64 \n",
            " 9   2022    1386 non-null   int64 \n",
            " 10  2023    1386 non-null   int64 \n",
            " 11  2024    1386 non-null   int64 \n",
            "dtypes: int64(10), object(2)\n",
            "memory usage: 130.1+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING: Runtime no longer has a reference to this dataframe, please re-run this cell and try again.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d30a1f54"
      },
      "source": [
        "## Explore and preprocess data\n",
        "\n",
        "### Subtask:\n",
        "Examine the dataset for missing values, outliers, and data types. Clean and preprocess the data as necessary for analysis, focusing on EV sales data.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 955
        },
        "id": "cc871dc2",
        "outputId": "f1c28855-20ac-4cdd-db94-80a2e36f3bb3"
      },
      "source": [
        "print(\"Missing values per column:\")\n",
        "display(df_ev.isnull().sum())\n",
        "\n",
        "print(\"\\nData types of columns:\")\n",
        "display(df_ev.dtypes)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Missing values per column:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cat      0\n",
              "Maker    0\n",
              "2015     0\n",
              "2016     0\n",
              "2017     0\n",
              "2018     0\n",
              "2019     0\n",
              "2020     0\n",
              "2021     0\n",
              "2022     0\n",
              "2023     0\n",
              "2024     0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Cat</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Maker</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Data types of columns:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cat      object\n",
              "Maker    object\n",
              "2015      int64\n",
              "2016      int64\n",
              "2017      int64\n",
              "2018      int64\n",
              "2019      int64\n",
              "2020      int64\n",
              "2021      int64\n",
              "2022      int64\n",
              "2023      int64\n",
              "2024      int64\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Cat</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Maker</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2023</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        },
        "id": "00ca6c7b",
        "outputId": "0acf5ec8-9ce6-4a66-b388-9e1347e2c700"
      },
      "source": [
        "print(\"\\nDescriptive statistics for year columns (potential outliers investigation):\")\n",
        "display(df_ev.describe())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Descriptive statistics for year columns (potential outliers investigation):\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "              2015          2016          2017          2018          2019  \\\n",
              "count  1386.000000   1386.000000   1386.000000   1386.000000   1386.000000   \n",
              "mean      5.593074     35.533189     62.784271     93.624098    119.614719   \n",
              "std      62.430741    400.757230    496.932817    511.486338    692.529043   \n",
              "min       0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "25%       0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "50%       0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "75%       0.000000      0.000000      3.000000      6.000000     10.000000   \n",
              "max    1708.000000  13401.000000  15094.000000  10816.000000  13213.000000   \n",
              "\n",
              "              2020          2021           2022           2023           2024  \n",
              "count  1386.000000   1386.000000    1386.000000    1386.000000    1386.000000  \n",
              "mean     89.300144    237.268398     736.315296    1103.343434     706.308081  \n",
              "std     504.744348   1793.878376    5917.016908    9631.219039    7022.251339  \n",
              "min       0.000000      0.000000       0.000000       0.000000       0.000000  \n",
              "25%       0.000000      0.000000       0.000000       0.000000       0.000000  \n",
              "50%       0.000000      0.000000       0.000000       1.000000       2.000000  \n",
              "75%       7.000000     13.000000      39.000000      96.000000      79.000000  \n",
              "max    9543.000000  46260.000000  109398.000000  267355.000000  211273.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9d2d0cca-cce3-461e-ba17-394226315225\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>2023</th>\n",
              "      <th>2024</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.593074</td>\n",
              "      <td>35.533189</td>\n",
              "      <td>62.784271</td>\n",
              "      <td>93.624098</td>\n",
              "      <td>119.614719</td>\n",
              "      <td>89.300144</td>\n",
              "      <td>237.268398</td>\n",
              "      <td>736.315296</td>\n",
              "      <td>1103.343434</td>\n",
              "      <td>706.308081</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>62.430741</td>\n",
              "      <td>400.757230</td>\n",
              "      <td>496.932817</td>\n",
              "      <td>511.486338</td>\n",
              "      <td>692.529043</td>\n",
              "      <td>504.744348</td>\n",
              "      <td>1793.878376</td>\n",
              "      <td>5917.016908</td>\n",
              "      <td>9631.219039</td>\n",
              "      <td>7022.251339</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>39.000000</td>\n",
              "      <td>96.000000</td>\n",
              "      <td>79.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1708.000000</td>\n",
              "      <td>13401.000000</td>\n",
              "      <td>15094.000000</td>\n",
              "      <td>10816.000000</td>\n",
              "      <td>13213.000000</td>\n",
              "      <td>9543.000000</td>\n",
              "      <td>46260.000000</td>\n",
              "      <td>109398.000000</td>\n",
              "      <td>267355.000000</td>\n",
              "      <td>211273.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d2d0cca-cce3-461e-ba17-394226315225')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9d2d0cca-cce3-461e-ba17-394226315225 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9d2d0cca-cce3-461e-ba17-394226315225');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4cdfc31a-6b63-4d48-aecc-9eb8f22c6454\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cdfc31a-6b63-4d48-aecc-9eb8f22c6454')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4cdfc31a-6b63-4d48-aecc-9eb8f22c6454 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_ev\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 716.3787460095799,\n        \"min\": 0.0,\n        \"max\": 1708.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.593073593073593,\n          1708.0,\n          62.430741371825015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4670.593332867754,\n        \"min\": 0.0,\n        \"max\": 13401.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          35.53318903318903,\n          13401.0,\n          400.75722998025736\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5260.281760131705,\n        \"min\": 0.0,\n        \"max\": 15094.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          62.784271284271284,\n          15094.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3754.146219564683,\n        \"min\": 0.0,\n        \"max\": 10816.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          93.62409812409813,\n          10816.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4586.811992658556,\n        \"min\": 0.0,\n        \"max\": 13213.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          119.61471861471861,\n          13213.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3308.7523462724803,\n        \"min\": 0.0,\n        \"max\": 9543.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          89.3001443001443,\n          9543.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16197.63750459534,\n        \"min\": 0.0,\n        \"max\": 46260.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          237.26839826839827,\n          46260.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38322.526183867165,\n        \"min\": 0.0,\n        \"max\": 109398.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          736.3152958152958,\n          109398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93963.90019112772,\n        \"min\": 0.0,\n        \"max\": 267355.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1386.0,\n          1103.3434343434344,\n          96.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 74269.99052049058,\n        \"min\": 0.0,\n        \"max\": 211273.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1386.0,\n          706.3080808080808,\n          79.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 355
        },
        "id": "bc7aa53c",
        "outputId": "cd7b8410-ca2b-4368-a97d-7c130aa40bd0"
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "year_columns = [str(year) for year in range(2015, 2025)]\n",
        "\n",
        "for column in year_columns:\n",
        "    upper_limit = df_ev[column].quantile(0.95)\n",
        "    df_ev[column] = np.where(df_ev[column] > upper_limit, upper_limit, df_ev[column])\n",
        "\n",
        "print(\"Descriptive statistics after capping outliers:\")\n",
        "display(df_ev.describe())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Descriptive statistics after capping outliers:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "              2015         2016         2017         2018         2019  \\\n",
              "count  1386.000000  1386.000000  1386.000000  1386.000000  1386.000000   \n",
              "mean      0.153680     5.392496    22.087662    37.379870    46.245671   \n",
              "std       0.497115    17.707990    59.878666    95.195756   115.161176   \n",
              "min       0.000000     0.000000     0.000000     0.000000     0.000000   \n",
              "25%       0.000000     0.000000     0.000000     0.000000     0.000000   \n",
              "50%       0.000000     0.000000     0.000000     0.000000     0.000000   \n",
              "75%       0.000000     0.000000     3.000000     6.000000    10.000000   \n",
              "max       2.000000    76.000000   241.750000   375.250000   446.250000   \n",
              "\n",
              "              2020         2021         2022         2023         2024  \n",
              "count  1386.000000  1386.000000  1386.000000  1386.000000  1386.000000  \n",
              "mean     30.500361    59.287518   155.675685   297.216811   179.917749  \n",
              "std      76.786329   151.402738   399.630488   747.964257   436.027110  \n",
              "min       0.000000     0.000000     0.000000     0.000000     0.000000  \n",
              "25%       0.000000     0.000000     0.000000     0.000000     0.000000  \n",
              "50%       0.000000     0.000000     0.000000     1.000000     2.000000  \n",
              "75%       7.000000    13.000000    39.000000    96.000000    79.000000  \n",
              "max     301.750000   597.250000  1584.250000  2961.250000  1759.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8d7b7ef-f2b9-4cf0-b0a8-26e65418304d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>2023</th>\n",
              "      <th>2024</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "      <td>1386.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.153680</td>\n",
              "      <td>5.392496</td>\n",
              "      <td>22.087662</td>\n",
              "      <td>37.379870</td>\n",
              "      <td>46.245671</td>\n",
              "      <td>30.500361</td>\n",
              "      <td>59.287518</td>\n",
              "      <td>155.675685</td>\n",
              "      <td>297.216811</td>\n",
              "      <td>179.917749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.497115</td>\n",
              "      <td>17.707990</td>\n",
              "      <td>59.878666</td>\n",
              "      <td>95.195756</td>\n",
              "      <td>115.161176</td>\n",
              "      <td>76.786329</td>\n",
              "      <td>151.402738</td>\n",
              "      <td>399.630488</td>\n",
              "      <td>747.964257</td>\n",
              "      <td>436.027110</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>39.000000</td>\n",
              "      <td>96.000000</td>\n",
              "      <td>79.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>76.000000</td>\n",
              "      <td>241.750000</td>\n",
              "      <td>375.250000</td>\n",
              "      <td>446.250000</td>\n",
              "      <td>301.750000</td>\n",
              "      <td>597.250000</td>\n",
              "      <td>1584.250000</td>\n",
              "      <td>2961.250000</td>\n",
              "      <td>1759.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8d7b7ef-f2b9-4cf0-b0a8-26e65418304d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b8d7b7ef-f2b9-4cf0-b0a8-26e65418304d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b8d7b7ef-f2b9-4cf0-b0a8-26e65418304d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-db9a891c-b0ec-4e13-ba50-8653107dbdd4\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db9a891c-b0ec-4e13-ba50-8653107dbdd4')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-db9a891c-b0ec-4e13-ba50-8653107dbdd4 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df_ev\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"2015\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 489.8915903319614,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.15367965367965367,\n          2.0,\n          0.4971153130695647\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 485.71364580954804,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.392496392496392,\n          76.0,\n          17.70799003738811\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 480.6018145760602,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          22.087662337662337,\n          241.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 481.23900697234427,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          37.37987012987013,\n          375.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 483.1157397366596,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          46.245670995671,\n          446.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 480.0308689307323,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          30.500360750360752,\n          301.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 492.150847910709,\n        \"min\": 0.0,\n        \"max\": 1386.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          59.28751803751804,\n          597.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 657.7067213650486,\n        \"min\": 0.0,\n        \"max\": 1584.25,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1386.0,\n          155.67568542568543,\n          1584.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1040.6228384795713,\n        \"min\": 0.0,\n        \"max\": 2961.25,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1386.0,\n          297.21681096681095,\n          96.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 696.8033643141741,\n        \"min\": 0.0,\n        \"max\": 1759.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1386.0,\n          179.91774891774892,\n          79.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING: Runtime no longer has a reference to this dataframe, please re-run this cell and try again.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aa4346e6"
      },
      "source": [
        "## Perform exploratory data analysis (eda)\n",
        "\n",
        "### Subtask:\n",
        "Analyze the trends in EV sales by maker and category over time. Visualize key metrics and identify patterns and growth areas.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "544b0c2d",
        "outputId": "2e36208c-d097-4665-f0e0-e8f47c5eafd1"
      },
      "source": [
        "year_columns = [str(year) for year in range(2015, 2025)]\n",
        "sales_by_category = df_ev.groupby('Cat')[year_columns].sum()\n",
        "sales_by_category = sales_by_category.T\n",
        "display(sales_by_category.head())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cat       2W        3W      LMV    MMV\n",
              "2015    46.0     81.00    80.00    6.0\n",
              "2016   852.0   6220.00   398.00    4.0\n",
              "2017  1295.5  28099.00  1215.00    4.0\n",
              "2018  1794.0  48374.75  1627.75   12.0\n",
              "2019  4086.0  58337.25  1543.25  130.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b521ba5c-212e-46db-8a46-913dd4a9ace5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Cat</th>\n",
              "      <th>2W</th>\n",
              "      <th>3W</th>\n",
              "      <th>LMV</th>\n",
              "      <th>MMV</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015</th>\n",
              "      <td>46.0</td>\n",
              "      <td>81.00</td>\n",
              "      <td>80.00</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>852.0</td>\n",
              "      <td>6220.00</td>\n",
              "      <td>398.00</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>1295.5</td>\n",
              "      <td>28099.00</td>\n",
              "      <td>1215.00</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>1794.0</td>\n",
              "      <td>48374.75</td>\n",
              "      <td>1627.75</td>\n",
              "      <td>12.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>4086.0</td>\n",
              "      <td>58337.25</td>\n",
              "      <td>1543.25</td>\n",
              "      <td>130.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b521ba5c-212e-46db-8a46-913dd4a9ace5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b521ba5c-212e-46db-8a46-913dd4a9ace5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b521ba5c-212e-46db-8a46-913dd4a9ace5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-c3de7cf5-21bf-4561-a406-219140e33996\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c3de7cf5-21bf-4561-a406-219140e33996')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-c3de7cf5-21bf-4561-a406-219140e33996 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(sales_by_category\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"2W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1523.4739741787519,\n        \"min\": 46.0,\n        \"max\": 4086.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          852.0,\n          4086.0,\n          1295.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25441.50461512153,\n        \"min\": 81.0,\n        \"max\": 58337.25,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6220.0,\n          58337.25,\n          28099.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LMV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 696.5128184391153,\n        \"min\": 80.0,\n        \"max\": 1627.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          398.0,\n          1543.25,\n          1215.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MMV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 55.32811220347212,\n        \"min\": 4.0,\n        \"max\": 130.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4.0,\n          130.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 435
        },
        "id": "87e9b4ac",
        "outputId": "ee90c4c8-6c0d-4aab-805e-240367223581"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "for column in sales_by_category.columns:\n",
        "    plt.plot(sales_by_category.index, sales_by_category[column], label=column)\n",
        "\n",
        "plt.title('EV Sales Trend by Category (2015-2024)')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Total Sales')\n",
        "plt.legend(title='Category')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABAcAAAIjCAYAAAB/KXJYAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAyohJREFUeJzs3Wd0VNXbhvFr0guEntBCDb2LlCCETihSBAsKShNFQQUUFEVELEiRolJUpKjw/hEEpEOkhRK6UaSJdEsoQhIIaWTO+2HMyJAACSSclPu3VpYnZ/acubMZWM6TfZ5tMQzDQERERERERERyLSezA4iIiIiIiIiIuVQcEBEREREREcnlVBwQERERERERyeVUHBARERERERHJ5VQcEBEREREREcnlVBwQERERERERyeVUHBARERERERHJ5VQcEBEREREREcnlVBwQERERERERyeVUHBARkRyjWbNmNGvWzOwYWY7FYmH06NG3HbN582YsFguLFy++P6Hknr344ou0bt3a7Bi5UsOGDRk+fLjZMUREMpSKAyIiYjd37lwsFsstv3bu3MmSJUuwWCzMmjXrltcJCQnBYrHwySef3Pb1Dhw4wKOPPkrp0qXx8PCgRIkStG7dmk8//TSjf7QMN3r06NvOVfKXihWpCw8Pp2fPnvj7++Pu7k7BggVp1aoVc+bMISkpKd3X+/DDD1m2bFnGB82iTp48yaxZs3jzzTft586ePcu7775L/fr1KVCgAIULF6ZZs2b8+OOPqV4jMjKS5557jiJFiuDt7U3z5s3Zv39/inELFy6kZ8+eVKhQ4bbv6eQC063+7biTf/75hwkTJhAUFESRIkXInz8/DRs2ZOHChamOj4+P5/XXX6d48eJ4enrSoEEDQkJCHMZcu3aNadOm0aZNG4oVK0bevHmpU6cOM2bMuOP7bP78+VgsFvLkyZPisddff51p06YRERFxx59LRCS7cDE7gIiIZD1jxoyhbNmyKc4HBARQp04d8uXLx4IFC3j22WdTff6CBQtwdname/fut3yNHTt20Lx5c0qVKkX//v0pWrQoZ8+eZefOnUydOpWXXnopw36ezNC1a1cCAgLs31+9epUXXniBRx55hK5du9rP+/n5mREvS5s1axYDBgzAz8+Pp59+mgoVKnDlyhU2bNhAv379+Pvvvx0+9KbFhx9+yKOPPkqXLl0y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dHQ0/v7+d9wZR8WB+yj5VgIfH58sXxzw8vLCx8cnS7/JcxrNuzk07+bQvJtD824Ozbs5NO/m0LybQ/Nujuw273e6tV0NCUVERERERERyORUHRERERERERHI5FQdEREREREREcjn1HMhiDMPg+vXrJCUlmZYhMTERFxcX4uLiTM1xt1xdXXF2djY7hoiIiIiISLah4kAWkpCQwN9//821a9dMzWEYBkWLFuXs2bN3bFqRFVksFkqWLEmePHnMjiIiIiIiIpItqDiQRVitVk6ePImzszPFixfHzc3NtA/mVquVq1evkidPHpycstedJ4ZhcOHCBf744w8qVKigFQQiIiIiIiJpoOJAFpGQkIDVasXf3x8vLy9Ts1itVhISEvDw8Mh2xQGAIkWKcOrUKRITE1UcEBERERERSYPs98kvh8uOH8azmux4K4SIiIiIiIiZ9ElUREREREREJJdTcUBEREREREQkl1NxQERERERERCSXU3EgG4uIiOCll16iXLlyuLu74+/vT8eOHdmwYUOanj937lzy58+fuSFFREREREQkyzO1ODBjxgxq1qyJj48PPj4+BAYGsmbNGvvjcXFxDBw4kEKFCpEnTx66devGuXPnHK5x5swZOnTogJeXF76+vgwbNozr1687jNm8eTMPPPAA7u7uBAQEMHfu3BRZpk2bRpkyZfDw8KBBgwbs3r3b4fG0ZLmfTp06Rd26ddm4cSMTJkzgwIEDrF27lubNmzNw4EDTct2LxMREsyOIiIiIiIjkSqYWB0qWLMlHH33Evn372Lt3Ly1atKBz584cPHgQgCFDhrBixQoWLVrEli1b+Ouvv+jatav9+UlJSXTo0IGEhAR27NjBvHnzmDt3LqNGjbKPOXnyJB06dKB58+aEh4czePBgnn32WdatW2cfs3DhQoYOHco777zD/v37qVWrFsHBwZw/f94+5k5Z7rcXX3wRi8XC7t276datGxUrVqRatWoMHTqUnTt3AjBp0iRq1KiBt7c3/v7+vPjii1y9ehWwFUz69OlDVFQUFosFi8XC6NGjAYiPj+ftt9/G398fb29vGjRowObNmx1e/8svv7Rvu/jII48wadKkFKsQZsyYQfny5XFzc6NSpUp88803Do9bLBZmzJhBp06d8Pb25v333ycgIICJEyc6jAsPD8disfD7779n3ASKiIiIiIjIf4ws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du7cyalTp9iwYQOdO3cmICCA4OBgAKpUqULbtm3p378/u3fvZvv27QwaNIju3btTvHhxAJ566inc3Nzo168fBw8eZOHChUydOtVhuf8rr7zC2rVr+fjjjzly5AijR49m7969DBo0CACLxcLgwYN5//33Wb58OQcOHOCZZ56hePHidOnS5b7OmYiIiIhIpvnrJ9j477aF7cZB4QBz84jIfZPu2woy0t69e2nevLn9++QP7L169WLGjBn88ssvzJs3j8jISIoXL06bNm147733HJbqz58/n0GDBtGyZUucnJzo1q0bn3zyif3xfPnysX79egYOHEjdunUpXLgwo0aNsm9jCNCoUSMWLFjAyJEjefPNN6lQoQLLli2jevXq9jHDhw8nJiaG5557jsjISBo3bszatWvx8PDIzCkSEREREbk/EmLg+2fBeh2qdII6T5udSETuI1OLA82aNcMwjFs+vm7dujteo2DBgixYsOC2Y2rWrMnWrVtvO+axxx7jscceu+XjFouFMWPGMGbMmDtmEhERERHJdta+Af/8Dj4loONUsFjMTiQi91GaigPLly9P8wU7dep012FERERERMQEh36A/V8DFnjkc/DK/GbjIpK1pKk4kNb76i0WC0lJSfeSR0RERERE7qeoP2H5y7bjxoOhbBNT44iIOdJUHLBarZmdQ0RERERE7jdrEix9HuIioXgdaPam2YlExCTZaitDERERERHJQDs+gVNbwdVb2xaK5HJ31ZAwJiaGLVu2cObMGRISEhwee/nllzMkmIiIiIiIZKI/98PG923H7cZBofLm5hERU6W7OPDTTz/Rvn17rl27RkxMDAULFuTixYt4eXnh6+ur4oCIiIiISFYXf/WmbQt7mp1IREyW7tsKhgwZQseOHbl8+TKenp7s3LmT06dPU7duXSZOnJgZGUVEREREJCOtGwGXjmvbQhGxS3dxIDw8nFdffRUnJyecnZ2Jj4/H39+f8ePH8+abamAiIiIiIpKladtCEUlFuosDrq6uODnZnubr68uZM2cAyJcvH2fPns3YdCIiIiIiknG0baGI3EK6ew7UqVOHPXv2UKFCBZo2bcqoUaO4ePEi33zzDdWrV8+MjCIiIiIicq+0baGI3Ea6Vw58+OGHFCtWDIAPPviAAgUK8MILL3DhwgU+//zzDA8oIiIiIiIZQNsWishtpHvlwIMPPmg/9vX1Ze3atRkaSEREREREMpi2LRSRO0j3yoEWLVoQGRmZ4nx0dDQtWrTIiEwiIiIiIpJRbty2sGpnbVsoIqlKd3Fg8+bNJCQkpDgfFxfH1q1bMySUiIiIiIhkkLVvaNtCEbmjNN9W8Msvv9iPDx06REREhP37pKQk1q5dS4kSJTI2nYiIiIiI3L1DP8BP3wAW6PoFeBYwO5GIZFFpLg7Url0bi8WCxWJJ9fYBT09PPv300wwNJyIiIiIidynqjxu2LRwCZRqbm0dEsrQ0FwdOnjyJYRiUK1eO3bt3U6RIEftjbm5u+Pr64uzsnCkhRUREREQkHaxJsHTAv9sWPgDNtW2hiNxemosDpUuXBsBqtWZaGBERERERyQDbp96wbeEscHY1O5GIZHHp3soQ4Pjx40yZMoXDhw8DULVqVV555RXKl9eWKCIiIiIipvpzH2z6wHbcfry2LRSRNEn3bgXr1q2jatWq7N69m5o1a1KzZk127dpFtWrVCAkJyYyMIiIiIiKSFvFX4fv+/25b2AVq9zA7kYhkE+leOfDGG28wZMgQPvrooxTnX3/9dVq3bp1h4UREREREJB3Wvv7vtoUloeMUbVsoImmW7pUDhw8fpl+/finO9+3bl0OHDmVIKBERERERSaeDy+Cnb7FtW/i5ti0UkXRJd3GgSJEihIeHpzgfHh6Or69vRmQSEREREZH0iPoDVvy7bWGTodq2UETSLc23FYwZM4bXXnuN/v3789xzz3HixAkaNWoEwPbt2xk3bhxDhw7NtKAiIiIiIpIKaxIseR7ioqBEXWg2wuxEIpINpbk48O677zJgwADefvtt8ubNy8cff8yIEbZ/eIoXL87o0aN5+eWXMy2oiIiIiIikYvsUOL0N3PJA1y+1baGI3JU0FwcMwwDAYrEwZMgQhgwZwpUrVwDImzdv5qQTEREREZFb+3MfbPrQdtxO2xaKyN1L124Flpu6naooICIiIiJikvir8P2ztm0Lqz0CtZ8yO5GIZGPpKg5UrFgxRYHgZpcuXbqnQCIiIiIikgZrXodLJ2zbFj48WdsWisg9SVdx4N133yVfvnyZlUVERERERNLi4FII/xYsTtD1C21bKCL3LF3Fge7du2u7QhERERERM0WehRWv2I4bD4UyD5mbR0RyBKe0DrzT7QQiIiIiIpLJrEmw9MZtC98wO5GI5BBpLg4k71YgIiIiIiIm2TYZTm/XtoUikuHSfFuB1WrNzBwiIiIiInI7f+yDzWNtx9q2UEQyWJpXDoiIiIiIiEnir8L3/bRtoYhkGhUHRERERESyujWvw+WT2rZQRDKNigMiIiIiIlmZti0UkftAxQERERERkaxK2xaKyH2i4oCIiIiISFbksG3hg9q2UEQylYoDIiIiIiJZ0Y3bFnbTtoUikrlUHBARERERyWpu3Law/QQoWM7cPCKS46k4ICIiIiKSlcRfuWHbwq5Q60mzE4lILqDigIiIiIhIVpK8bWE+f21bKCL3jYoDIiIiIiJZxa9LIHz+DdsW5jc7kYjkEioOiIiIiIhkBZFnYcVg23GTV6F0I1PjiEjuouKAiIiIiIjZrEmw5DmI/3fbwqavm51IRHIZFQdERERERMy2bRKc2aFtC0XENCoOiIiIiIiY6Y+9sCl528KJ2rZQREyh4oCIiIiIiFmSty00kqB6N6jV3exEIpJLqTggIiIiImKW1cPh8inIVwo6TNK2hSJiGhUHRERERETM8Ov38PMCbVsoIlmCigMiIiIiIvdb5BlYMcR23OQ1KB1obh4RyfVUHBARERERuZ+sSbDkedu2hSXradtCEckSVBwQEREREbmftiZvW5gXun4Jzi5mJxIRUXFAREREROS+ObsHNv+7bWGHiVCwrLl5RET+peKAiIiIiMj9EBcNS579d9vCR6HmE2YnEhGxU3FAREREROR+WHPDtoUPa9tCEclaVBwQEREREclsBxbDz//337aFHvnMTiQi4kDFARERERGRzBR5BlYOtR1r20IRyaJUHBARERERySxJ12HJc9q2UESyPFOLA6GhoXTs2JHixYtjsVhYtmyZw+OGYTBq1CiKFSuGp6cnrVq14tixYw5jLl26RI8ePfDx8SF//vz069ePq1evOoz55ZdfaNKkCR4eHvj7+zN+/PgUWRYtWkTlypXx8PCgRo0arF69Ot1ZREREREQcbJsEZ8K0baGIZHmmFgdiYmKoVasW06ZNS/Xx8ePH88knnzBz5kx27dqFt7c3wcHBxMXF2cf06NGDgwcPEhISwsqVKwkNDeW5556zPx4dHU2bNm0oXbo0+/btY8KECYwePZovvvjCPmbHjh08+eST9OvXj59++okuXbrQpUsXfv3113RlERERERGxO7sbNn9kO9a2hSKS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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 325
        },
        "id": "10e25b45",
        "outputId": "8c3445d9-b3f4-4064-f993-3d5344765128"
      },
      "source": [
        "sales_by_maker = df_ev.groupby('Maker')[year_columns].sum()\n",
        "sales_by_maker = sales_by_maker.T\n",
        "display(sales_by_maker.head())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Maker  \"VOLVO GROUP INDIA PVT LTD\"  3EV INDUSTRIES PVT LTD  \\\n",
              "2015                           0.0                     0.0   \n",
              "2016                           0.0                     0.0   \n",
              "2017                          31.0                     0.0   \n",
              "2018                          12.0                     0.0   \n",
              "2019                           0.0                     0.0   \n",
              "\n",
              "Maker  3GB TECHNOLOGY PVT LTD  3S INDUSTRIES PRIVATE LIMITED  \\\n",
              "2015                      0.0                            0.0   \n",
              "2016                      1.0                            0.0   \n",
              "2017                      1.0                            0.0   \n",
              "2018                      1.0                            0.0   \n",
              "2019                      0.0                           51.0   \n",
              "\n",
              "Maker  A B EXCAVATORS & EARTHMOVER LTD  A D AGRO WORKS  A K AUTTO ELECTRICAL  \\\n",
              "2015                               0.0             0.0                   0.0   \n",
              "2016                               1.0             0.0                   1.0   \n",
              "2017                               0.0             2.0                  72.0   \n",
              "2018                               0.0             1.0                  56.0   \n",
              "2019                               0.0             0.0                  42.0   \n",
              "\n",
              "Maker  A K GUPTA & CO.  A P I MOTORS PVT LTD  A R T WELDING WORKS  ...  \\\n",
              "2015              0.00                   0.0                  0.0  ...   \n",
              "2016              0.00                   0.0                  1.0  ...   \n",
              "2017            100.00                   0.0                  0.0  ...   \n",
              "2018            375.25                   2.0                  2.0  ...   \n",
              "2019            438.00                  28.0                  0.0  ...   \n",
              "\n",
              "Maker  ZENIAK INNOVATION INDIA LTD  ZENTHIUM EV PVT LTD  \\\n",
              "2015                          0.00                  0.0   \n",
              "2016                         10.00                  0.0   \n",
              "2017                        241.75                  0.0   \n",
              "2018                        375.25                  0.0   \n",
              "2019                        446.25                  0.0   \n",
              "\n",
              "Maker  ZEOPLUS AXIS INDIA PVT. LTD.  \\\n",
              "2015                            0.0   \n",
              "2016                            0.0   \n",
              "2017                            0.0   \n",
              "2018                            0.0   \n",
              "2019                            0.0   \n",
              "\n",
              "Maker  ZERO 21 RENEWABLE ENERGY SOLUTIONS PVT LTD  ZESAR MOTORS PVT LTD  \\\n",
              "2015                                          0.0                   0.0   \n",
              "2016                                          0.0                   0.0   \n",
              "2017                                          0.0                   4.0   \n",
              "2018                                          0.0                  12.0   \n",
              "2019                                          0.0                  12.0   \n",
              "\n",
              "Maker  ZHEJIANG LUYUAN (IMPORTER: DYNAM EV TECH)  \\\n",
              "2015                                         0.0   \n",
              "2016                                         0.0   \n",
              "2017                                         0.0   \n",
              "2018                                         0.0   \n",
              "2019                                         0.0   \n",
              "\n",
              "Maker  ZHEJIANG TIANYING  (IMPORTER: NEWTRON ELECTRIC)  \\\n",
              "2015                                               0.0   \n",
              "2016                                               0.0   \n",
              "2017                                               0.0   \n",
              "2018                                               0.0   \n",
              "2019                                               0.0   \n",
              "\n",
              "Maker  ZHONGHUALONG (IMPORTER: POWORO PVT LTD)  \\\n",
              "2015                                       0.0   \n",
              "2016                                       0.0   \n",
              "2017                                       0.0   \n",
              "2018                                       0.0   \n",
              "2019                                       0.0   \n",
              "\n",
              "Maker  ZHONGXING (IMPORTER:GREENO AUTOMOBILE)  ZOHAN TRADERS AND BIG METRO  \n",
              "2015                                      0.0                          0.0  \n",
              "2016                                      0.0                          0.0  \n",
              "2017                                      0.0                          0.0  \n",
              "2018                                      0.0                          0.0  \n",
              "2019                                      0.0                          0.0  \n",
              "\n",
              "[5 rows x 1196 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-34b70015-3b1a-4da0-a3e7-13e14333f560\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Maker</th>\n",
              "      <th>\"VOLVO GROUP INDIA PVT LTD\"</th>\n",
              "      <th>3EV INDUSTRIES PVT LTD</th>\n",
              "      <th>3GB TECHNOLOGY PVT LTD</th>\n",
              "      <th>3S INDUSTRIES PRIVATE LIMITED</th>\n",
              "      <th>A B EXCAVATORS &amp; EARTHMOVER LTD</th>\n",
              "      <th>A D AGRO WORKS</th>\n",
              "      <th>A K AUTTO ELECTRICAL</th>\n",
              "      <th>A K GUPTA &amp; CO.</th>\n",
              "      <th>A P I MOTORS PVT LTD</th>\n",
              "      <th>A R T WELDING WORKS</th>\n",
              "      <th>...</th>\n",
              "      <th>ZENIAK INNOVATION INDIA LTD</th>\n",
              "      <th>ZENTHIUM EV PVT LTD</th>\n",
              "      <th>ZEOPLUS AXIS INDIA PVT. LTD.</th>\n",
              "      <th>ZERO 21 RENEWABLE ENERGY SOLUTIONS PVT LTD</th>\n",
              "      <th>ZESAR MOTORS PVT LTD</th>\n",
              "      <th>ZHEJIANG LUYUAN (IMPORTER: DYNAM EV TECH)</th>\n",
              "      <th>ZHEJIANG TIANYING  (IMPORTER: NEWTRON ELECTRIC)</th>\n",
              "      <th>ZHONGHUALONG (IMPORTER: POWORO PVT LTD)</th>\n",
              "      <th>ZHONGXING (IMPORTER:GREENO AUTOMOBILE)</th>\n",
              "      <th>ZOHAN TRADERS AND BIG METRO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2015</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>10.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017</th>\n",
              "      <td>31.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>100.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>241.75</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018</th>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>56.0</td>\n",
              "      <td>375.25</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>...</td>\n",
              "      <td>375.25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>51.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>42.0</td>\n",
              "      <td>438.00</td>\n",
              "      <td>28.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>446.25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 1196 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34b70015-3b1a-4da0-a3e7-13e14333f560')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-34b70015-3b1a-4da0-a3e7-13e14333f560 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-34b70015-3b1a-4da0-a3e7-13e14333f560');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-52409c21-b7a2-4d9f-8c74-f22310194ce7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-52409c21-b7a2-4d9f-8c74-f22310194ce7')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-52409c21-b7a2-4d9f-8c74-f22310194ce7 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c9825d45"
      },
      "source": [
        "**Reasoning**:\n",
        "Plot the transposed DataFrame of sales by maker, focusing on the top makers for better visualization, to observe their sales trends over the years.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 412
        },
        "id": "a90fc47f",
        "outputId": "980a3540-6074-4d09-daa5-f37a46e0b439"
      },
      "source": [
        "top_makers = sales_by_maker.sum().sort_values(ascending=False).head(10).index\n",
        "\n",
        "plt.figure(figsize=(14, 7))\n",
        "for maker in top_makers:\n",
        "    plt.plot(sales_by_maker.index, sales_by_maker[maker], label=maker)\n",
        "\n",
        "plt.title('Top 10 EV Maker Sales Trend (2015-2024)')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Total Sales')\n",
        "plt.legend(title='Maker', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1f12d681",
        "outputId": "7693cc5c-0741-44b1-d964-67b8ac6070a9"
      },
      "source": [
        "print(\"Observations from EV Sales Trends:\")\n",
        "print(\"\\nCategory Trends:\")\n",
        "print(\"- The plot of EV sales by category shows significant growth in 3W (Three Wheelers) and 2W (Two Wheelers) categories, especially in recent years.\")\n",
        "print(\"- LMV (Light Motor Vehicles) and MMV (Medium Motor Vehicles) show some growth but are significantly lower in sales volume compared to 2W and 3W.\")\n",
        "\n",
        "print(\"\\nMaker Trends (Top 10):\")\n",
        "print(\"- The plot of top 10 EV maker sales shows varying growth trajectories among manufacturers.\")\n",
        "print(\"- Some makers have shown consistent and steep growth, indicating strong market presence and demand.\")\n",
        "print(\"- Others have more fluctuating sales or slower growth.\")\n",
        "print(\"- Identifying the makers with the most substantial and sustained growth could indicate key players and potential partners or competitors in the market.\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Observations from EV Sales Trends:\n",
            "\n",
            "Category Trends:\n",
            "- The plot of EV sales by category shows significant growth in 3W (Three Wheelers) and 2W (Two Wheelers) categories, especially in recent years.\n",
            "- LMV (Light Motor Vehicles) and MMV (Medium Motor Vehicles) show some growth but are significantly lower in sales volume compared to 2W and 3W.\n",
            "\n",
            "Maker Trends (Top 10):\n",
            "- The plot of top 10 EV maker sales shows varying growth trajectories among manufacturers.\n",
            "- Some makers have shown consistent and steep growth, indicating strong market presence and demand.\n",
            "- Others have more fluctuating sales or slower growth.\n",
            "- Identifying the makers with the most substantial and sustained growth could indicate key players and potential partners or competitors in the market.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "88b78f22"
      },
      "source": [
        "## Feature engineering\n",
        "\n",
        "### Subtask:\n",
        "Create new features from the existing data that could be relevant for segmentation, such as market share by maker and category, growth rates, or regional sales distribution if available.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "a0af827e",
        "outputId": "be793504-5335-4a0e-834f-df5df48e8619"
      },
      "source": [
        "import numpy as np\n",
        "\n",
        "year_columns = [str(year) for year in range(2015, 2025)]\n",
        "\n",
        "# 1. Calculate total sales for each maker\n",
        "df_ev['Total_Sales'] = df_ev[year_columns].sum(axis=1)\n",
        "\n",
        "# Calculate total EV sales per year\n",
        "total_ev_sales_per_year = df_ev[year_columns].sum(axis=0)\n",
        "\n",
        "# 2. Calculate market share for each maker in each year\n",
        "for year in year_columns:\n",
        "    market_share_col = f'{year}_Market_Share'\n",
        "    df_ev[market_share_col] = df_ev[year] / total_ev_sales_per_year[year]\n",
        "    # Handle potential division by zero for years with zero total sales\n",
        "    df_ev[market_share_col] = df_ev[market_share_col].replace([np.inf, -np.inf], 0).fillna(0)\n",
        "\n",
        "\n",
        "# 3. Calculate year-over-year growth rate for each maker's sales\n",
        "for i in range(1, len(year_columns)):\n",
        "    current_year = year_columns[i]\n",
        "    previous_year = year_columns[i-1]\n",
        "    growth_rate_col = f'{current_year}_Growth_Rate'\n",
        "    # Calculate growth rate, handle division by zero by replacing with NaN first\n",
        "    df_ev[growth_rate_col] = (df_ev[current_year] - df_ev[previous_year]) / df_ev[previous_year]\n",
        "    # Replace inf and NaN values after calculation\n",
        "    df_ev[growth_rate_col] = df_ev[growth_rate_col].replace([np.inf, -np.inf], np.nan).fillna(0)\n",
        "\n",
        "\n",
        "# 4. Calculate total sales for each category across all years\n",
        "# First, group by category and sum sales for each year\n",
        "category_sales = df_ev.groupby('Cat')[year_columns].sum()\n",
        "# Then, calculate total sales across years for each category\n",
        "df_ev['Total_Sales_Category'] = df_ev['Cat'].map(category_sales.sum(axis=1))\n",
        "\n",
        "\n",
        "# 5. Calculate market share for each category in each year\n",
        "for year in year_columns:\n",
        "    category_market_share_col = f'{year}_Category_Market_Share'\n",
        "    # Map the category's sales for the year to each row\n",
        "    df_ev[category_market_share_col] = df_ev['Cat'].map(category_sales[year]) / total_ev_sales_per_year[year]\n",
        "    # Handle potential division by zero for years with zero total sales\n",
        "    df_ev[category_market_share_col] = df_ev[category_market_share_col].replace([np.inf, -np.inf], 0).fillna(0)\n",
        "\n",
        "\n",
        "# 6. Calculate year-over-year growth rate for each category's sales\n",
        "for i in range(1, len(year_columns)):\n",
        "    current_year = year_columns[i]\n",
        "    previous_year = year_columns[i-1]\n",
        "    category_growth_rate_col = f'{current_year}_Category_Growth_Rate'\n",
        "    # Calculate growth rate for categories, handle division by zero by replacing with NaN first\n",
        "    df_ev[category_growth_rate_col] = (df_ev['Cat'].map(category_sales[current_year]) - df_ev['Cat'].map(category_sales[previous_year])) / df_ev['Cat'].map(category_sales[previous_year])\n",
        "    # Replace inf and NaN values after calculation\n",
        "    df_ev[category_growth_rate_col] = df_ev[category_growth_rate_col].replace([np.inf, -np.inf], np.nan).fillna(0)\n",
        "\n",
        "\n",
        "# 7. Display the first few rows and info of the updated DataFrame\n",
        "display(df_ev.head())\n",
        "display(df_ev.info())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  Cat                          Maker  2015  2016  2017  2018  2019  2020  \\\n",
              "0  3W    \"VOLVO GROUP INDIA PVT LTD\"   0.0   0.0  31.0  12.0   0.0   0.0   \n",
              "1  3W         3EV INDUSTRIES PVT LTD   0.0   0.0   0.0   0.0   0.0   0.0   \n",
              "2  2W         3GB TECHNOLOGY PVT LTD   0.0   0.0   0.0   1.0   0.0   0.0   \n",
              "3  3W         3GB TECHNOLOGY PVT LTD   0.0   1.0   1.0   0.0   0.0   0.0   \n",
              "4  3W  3S INDUSTRIES PRIVATE LIMITED   0.0   0.0   0.0   0.0  48.0  66.0   \n",
              "\n",
              "    2021   2022  ...  2024_Category_Market_Share  2016_Category_Growth_Rate  \\\n",
              "0    0.0    0.0  ...                    0.751337                  75.790123   \n",
              "1  112.0  390.0  ...                    0.751337                  75.790123   \n",
              "2    0.0    0.0  ...                    0.195841                  17.521739   \n",
              "3    0.0    0.0  ...                    0.751337                  75.790123   \n",
              "4   43.0   68.0  ...                    0.751337                  75.790123   \n",
              "\n",
              "   2017_Category_Growth_Rate  2018_Category_Growth_Rate  \\\n",
              "0                   3.517524                   0.721583   \n",
              "1                   3.517524                   0.721583   \n",
              "2                   0.520540                   0.384794   \n",
              "3                   3.517524                   0.721583   \n",
              "4                   3.517524                   0.721583   \n",
              "\n",
              "   2019_Category_Growth_Rate  2020_Category_Growth_Rate  \\\n",
              "0                   0.205944                  -0.369939   \n",
              "1                   0.205944                  -0.369939   \n",
              "2                   1.277592                   0.042401   \n",
              "3                   0.205944                  -0.369939   \n",
              "4                   0.205944                  -0.369939   \n",
              "\n",
              "   2021_Category_Growth_Rate  2022_Category_Growth_Rate  \\\n",
              "0                   0.844352                   1.379494   \n",
              "1                   0.844352                   1.379494   \n",
              "2                   1.717556                   3.040908   \n",
              "3                   0.844352                   1.379494   \n",
              "4                   0.844352                   1.379494   \n",
              "\n",
              "   2023_Category_Growth_Rate  2024_Category_Growth_Rate  \n",
              "0                   0.852571                  -0.373039  \n",
              "1                   0.852571                  -0.373039  \n",
              "2                   0.927703                  -0.458362  \n",
              "3                   0.852571                  -0.373039  \n",
              "4                   0.852571                  -0.373039  \n",
              "\n",
              "[5 rows x 52 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0a86407c-851d-442f-8af0-8f1c425c60d2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cat</th>\n",
              "      <th>Maker</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>...</th>\n",
              "      <th>2024_Category_Market_Share</th>\n",
              "      <th>2016_Category_Growth_Rate</th>\n",
              "      <th>2017_Category_Growth_Rate</th>\n",
              "      <th>2018_Category_Growth_Rate</th>\n",
              "      <th>2019_Category_Growth_Rate</th>\n",
              "      <th>2020_Category_Growth_Rate</th>\n",
              "      <th>2021_Category_Growth_Rate</th>\n",
              "      <th>2022_Category_Growth_Rate</th>\n",
              "      <th>2023_Category_Growth_Rate</th>\n",
              "      <th>2024_Category_Growth_Rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3W</td>\n",
              "      <td>\"VOLVO GROUP INDIA PVT LTD\"</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.751337</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3W</td>\n",
              "      <td>3EV INDUSTRIES PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>390.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.751337</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.195841</td>\n",
              "      <td>17.521739</td>\n",
              "      <td>0.520540</td>\n",
              "      <td>0.384794</td>\n",
              "      <td>1.277592</td>\n",
              "      <td>0.042401</td>\n",
              "      <td>1.717556</td>\n",
              "      <td>3.040908</td>\n",
              "      <td>0.927703</td>\n",
              "      <td>-0.458362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.751337</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3W</td>\n",
              "      <td>3S INDUSTRIES PRIVATE LIMITED</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>48.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.751337</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 52 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a86407c-851d-442f-8af0-8f1c425c60d2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0a86407c-851d-442f-8af0-8f1c425c60d2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0a86407c-851d-442f-8af0-8f1c425c60d2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-0166c509-4e6b-46ea-a5b7-f95a11307f62\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0166c509-4e6b-46ea-a5b7-f95a11307f62')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-0166c509-4e6b-46ea-a5b7-f95a11307f62 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1386 entries, 0 to 1385\n",
            "Data columns (total 52 columns):\n",
            " #   Column                      Non-Null Count  Dtype  \n",
            "---  ------                      --------------  -----  \n",
            " 0   Cat                         1386 non-null   object \n",
            " 1   Maker                       1386 non-null   object \n",
            " 2   2015                        1386 non-null   float64\n",
            " 3   2016                        1386 non-null   float64\n",
            " 4   2017                        1386 non-null   float64\n",
            " 5   2018                        1386 non-null   float64\n",
            " 6   2019                        1386 non-null   float64\n",
            " 7   2020                        1386 non-null   float64\n",
            " 8   2021                        1386 non-null   float64\n",
            " 9   2022                        1386 non-null   float64\n",
            " 10  2023                        1386 non-null   float64\n",
            " 11  2024                        1386 non-null   float64\n",
            " 12  Total_Sales                 1386 non-null   float64\n",
            " 13  2015_Market_Share           1386 non-null   float64\n",
            " 14  2016_Market_Share           1386 non-null   float64\n",
            " 15  2017_Market_Share           1386 non-null   float64\n",
            " 16  2018_Market_Share           1386 non-null   float64\n",
            " 17  2019_Market_Share           1386 non-null   float64\n",
            " 18  2020_Market_Share           1386 non-null   float64\n",
            " 19  2021_Market_Share           1386 non-null   float64\n",
            " 20  2022_Market_Share           1386 non-null   float64\n",
            " 21  2023_Market_Share           1386 non-null   float64\n",
            " 22  2024_Market_Share           1386 non-null   float64\n",
            " 23  2016_Growth_Rate            1386 non-null   float64\n",
            " 24  2017_Growth_Rate            1386 non-null   float64\n",
            " 25  2018_Growth_Rate            1386 non-null   float64\n",
            " 26  2019_Growth_Rate            1386 non-null   float64\n",
            " 27  2020_Growth_Rate            1386 non-null   float64\n",
            " 28  2021_Growth_Rate            1386 non-null   float64\n",
            " 29  2022_Growth_Rate            1386 non-null   float64\n",
            " 30  2023_Growth_Rate            1386 non-null   float64\n",
            " 31  2024_Growth_Rate            1386 non-null   float64\n",
            " 32  Total_Sales_Category        1386 non-null   float64\n",
            " 33  2015_Category_Market_Share  1386 non-null   float64\n",
            " 34  2016_Category_Market_Share  1386 non-null   float64\n",
            " 35  2017_Category_Market_Share  1386 non-null   float64\n",
            " 36  2018_Category_Market_Share  1386 non-null   float64\n",
            " 37  2019_Category_Market_Share  1386 non-null   float64\n",
            " 38  2020_Category_Market_Share  1386 non-null   float64\n",
            " 39  2021_Category_Market_Share  1386 non-null   float64\n",
            " 40  2022_Category_Market_Share  1386 non-null   float64\n",
            " 41  2023_Category_Market_Share  1386 non-null   float64\n",
            " 42  2024_Category_Market_Share  1386 non-null   float64\n",
            " 43  2016_Category_Growth_Rate   1386 non-null   float64\n",
            " 44  2017_Category_Growth_Rate   1386 non-null   float64\n",
            " 45  2018_Category_Growth_Rate   1386 non-null   float64\n",
            " 46  2019_Category_Growth_Rate   1386 non-null   float64\n",
            " 47  2020_Category_Growth_Rate   1386 non-null   float64\n",
            " 48  2021_Category_Growth_Rate   1386 non-null   float64\n",
            " 49  2022_Category_Growth_Rate   1386 non-null   float64\n",
            " 50  2023_Category_Growth_Rate   1386 non-null   float64\n",
            " 51  2024_Category_Growth_Rate   1386 non-null   float64\n",
            "dtypes: float64(50), object(2)\n",
            "memory usage: 563.2+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7439dc9b"
      },
      "source": [
        "## Segmentation analysis\n",
        "\n",
        "### Subtask:\n",
        "Apply clustering algorithms (e.g., K-Means, Hierarchical Clustering) to segment the market based on relevant features from the EV sales data. Determine the optimal number of segments.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "480a50dd",
        "outputId": "17a536d5-d933-48f1-c91c-323aef7748e4"
      },
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.cluster import KMeans\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Select relevant features for clustering\n",
        "# Using market share and growth rates as they represent relative performance and growth trajectory\n",
        "feature_columns = [col for col in df_ev.columns if ('Market_Share' in col or 'Growth_Rate' in col)]\n",
        "# Exclude category-level features if we want to segment makers\n",
        "maker_features = [col for col in feature_columns if '_Category_' not in col]\n",
        "\n",
        "# Also include Total Sales for makers as it indicates scale\n",
        "maker_features.append('Total_Sales')\n",
        "\n",
        "df_segmentation = df_ev[maker_features].copy()\n",
        "\n",
        "# Handle any remaining potential NaN values by filling with 0 or mean/median if appropriate\n",
        "# Given the previous handling, fillna(0) is used for simplicity.\n",
        "df_segmentation.fillna(0, inplace=True)\n",
        "\n",
        "# Standardize the selected features\n",
        "scaler = StandardScaler()\n",
        "df_segmentation_scaled = scaler.fit_transform(df_segmentation)\n",
        "\n",
        "# Apply K-Means clustering and calculate inertia for a range of k values\n",
        "inertia = []\n",
        "k_range = range(1, 11)\n",
        "for k in k_range:\n",
        "    kmeans = KMeans(n_clusters=k, random_state=42, n_init=10) # Added n_init\n",
        "    kmeans.fit(df_segmentation_scaled)\n",
        "    inertia.append(kmeans.inertia_)\n",
        "\n",
        "# Plot the inertia values to find the elbow point\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(k_range, inertia, marker='o')\n",
        "plt.title('Elbow Method for Optimal k')\n",
        "plt.xlabel('Number of clusters (k)')\n",
        "plt.ylabel('Inertia')\n",
        "plt.xticks(k_range)\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 793
        },
        "id": "c1731171",
        "outputId": "bb022be1-4a8f-4002-f0c4-1932392eb575"
      },
      "source": [
        "# Determine the optimal number of clusters from the Elbow plot\n",
        "# Assuming the elbow is at k=4 based on typical interpretations of such plots\n",
        "optimal_k = 4\n",
        "\n",
        "# Fit K-Means with the optimal number of clusters\n",
        "kmeans = KMeans(n_clusters=optimal_k, random_state=42, n_init=10) # Added n_init\n",
        "kmeans.fit(df_segmentation_scaled)\n",
        "\n",
        "# Add the cluster labels to the original df_ev DataFrame\n",
        "df_ev['Cluster'] = kmeans.labels_\n",
        "\n",
        "# Display the first few rows of the updated DataFrame to show the new Cluster column\n",
        "display(df_ev.head())\n",
        "\n",
        "# Display the size of each cluster\n",
        "cluster_sizes = df_ev['Cluster'].value_counts().reset_index()\n",
        "cluster_sizes.columns = ['Cluster', 'Cluster Size']\n",
        "display(cluster_sizes)\n",
        "\n",
        "# Display the mean values of the features for each cluster to understand the characteristics of each segment\n",
        "cluster_means = df_ev.groupby('Cluster')[maker_features].mean()\n",
        "display(cluster_means)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  Cat                          Maker  2015  2016  2017  2018  2019  2020  \\\n",
              "0  3W    \"VOLVO GROUP INDIA PVT LTD\"   0.0   0.0  31.0  12.0   0.0   0.0   \n",
              "1  3W         3EV INDUSTRIES PVT LTD   0.0   0.0   0.0   0.0   0.0   0.0   \n",
              "2  2W         3GB TECHNOLOGY PVT LTD   0.0   0.0   0.0   1.0   0.0   0.0   \n",
              "3  3W         3GB TECHNOLOGY PVT LTD   0.0   1.0   1.0   0.0   0.0   0.0   \n",
              "4  3W  3S INDUSTRIES PRIVATE LIMITED   0.0   0.0   0.0   0.0  48.0  66.0   \n",
              "\n",
              "    2021   2022  ...  2016_Category_Growth_Rate  2017_Category_Growth_Rate  \\\n",
              "0    0.0    0.0  ...                  75.790123                   3.517524   \n",
              "1  112.0  390.0  ...                  75.790123                   3.517524   \n",
              "2    0.0    0.0  ...                  17.521739                   0.520540   \n",
              "3    0.0    0.0  ...                  75.790123                   3.517524   \n",
              "4   43.0   68.0  ...                  75.790123                   3.517524   \n",
              "\n",
              "   2018_Category_Growth_Rate  2019_Category_Growth_Rate  \\\n",
              "0                   0.721583                   0.205944   \n",
              "1                   0.721583                   0.205944   \n",
              "2                   0.384794                   1.277592   \n",
              "3                   0.721583                   0.205944   \n",
              "4                   0.721583                   0.205944   \n",
              "\n",
              "   2020_Category_Growth_Rate  2021_Category_Growth_Rate  \\\n",
              "0                  -0.369939                   0.844352   \n",
              "1                  -0.369939                   0.844352   \n",
              "2                   0.042401                   1.717556   \n",
              "3                  -0.369939                   0.844352   \n",
              "4                  -0.369939                   0.844352   \n",
              "\n",
              "   2022_Category_Growth_Rate  2023_Category_Growth_Rate  \\\n",
              "0                   1.379494                   0.852571   \n",
              "1                   1.379494                   0.852571   \n",
              "2                   3.040908                   0.927703   \n",
              "3                   1.379494                   0.852571   \n",
              "4                   1.379494                   0.852571   \n",
              "\n",
              "   2024_Category_Growth_Rate  Cluster  \n",
              "0                  -0.373039        1  \n",
              "1                  -0.373039        1  \n",
              "2                  -0.458362        1  \n",
              "3                  -0.373039        1  \n",
              "4                  -0.373039        1  \n",
              "\n",
              "[5 rows x 53 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-79178433-987c-4059-b03b-db7a7df70bec\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cat</th>\n",
              "      <th>Maker</th>\n",
              "      <th>2015</th>\n",
              "      <th>2016</th>\n",
              "      <th>2017</th>\n",
              "      <th>2018</th>\n",
              "      <th>2019</th>\n",
              "      <th>2020</th>\n",
              "      <th>2021</th>\n",
              "      <th>2022</th>\n",
              "      <th>...</th>\n",
              "      <th>2016_Category_Growth_Rate</th>\n",
              "      <th>2017_Category_Growth_Rate</th>\n",
              "      <th>2018_Category_Growth_Rate</th>\n",
              "      <th>2019_Category_Growth_Rate</th>\n",
              "      <th>2020_Category_Growth_Rate</th>\n",
              "      <th>2021_Category_Growth_Rate</th>\n",
              "      <th>2022_Category_Growth_Rate</th>\n",
              "      <th>2023_Category_Growth_Rate</th>\n",
              "      <th>2024_Category_Growth_Rate</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3W</td>\n",
              "      <td>\"VOLVO GROUP INDIA PVT LTD\"</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>31.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3W</td>\n",
              "      <td>3EV INDUSTRIES PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>390.0</td>\n",
              "      <td>...</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>17.521739</td>\n",
              "      <td>0.520540</td>\n",
              "      <td>0.384794</td>\n",
              "      <td>1.277592</td>\n",
              "      <td>0.042401</td>\n",
              "      <td>1.717556</td>\n",
              "      <td>3.040908</td>\n",
              "      <td>0.927703</td>\n",
              "      <td>-0.458362</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3W</td>\n",
              "      <td>3GB TECHNOLOGY PVT LTD</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3W</td>\n",
              "      <td>3S INDUSTRIES PRIVATE LIMITED</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>48.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>...</td>\n",
              "      <td>75.790123</td>\n",
              "      <td>3.517524</td>\n",
              "      <td>0.721583</td>\n",
              "      <td>0.205944</td>\n",
              "      <td>-0.369939</td>\n",
              "      <td>0.844352</td>\n",
              "      <td>1.379494</td>\n",
              "      <td>0.852571</td>\n",
              "      <td>-0.373039</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 53 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-79178433-987c-4059-b03b-db7a7df70bec')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-79178433-987c-4059-b03b-db7a7df70bec button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-79178433-987c-4059-b03b-db7a7df70bec');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-58827e2a-5c61-4e3b-b25d-d459372317aa\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58827e2a-5c61-4e3b-b25d-d459372317aa')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-58827e2a-5c61-4e3b-b25d-d459372317aa button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   Cluster  Cluster Size\n",
              "0        1          1190\n",
              "1        0            83\n",
              "2        3            72\n",
              "3        2            41"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a4c9c45b-65da-44ce-a063-d3d70decc2a7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>Cluster Size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4c9c45b-65da-44ce-a063-d3d70decc2a7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a4c9c45b-65da-44ce-a063-d3d70decc2a7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a4c9c45b-65da-44ce-a063-d3d70decc2a7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-92ad2aeb-243a-44b4-bbd1-5addf6e0b049\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92ad2aeb-243a-44b4-bbd1-5addf6e0b049')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-92ad2aeb-243a-44b4-bbd1-5addf6e0b049 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_22e81a51-c7dc-4cf1-9fef-76b6c045b2ab\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_sizes')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_22e81a51-c7dc-4cf1-9fef-76b6c045b2ab button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('cluster_sizes');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cluster_sizes",
              "summary": "{\n  \"name\": \"cluster_sizes\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 41,\n        \"max\": 1190,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          83,\n          41,\n          1190\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "         2015_Market_Share  2016_Market_Share  2017_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.000566           0.000374           0.000216   \n",
              "1                 0.000450           0.000205           0.000269   \n",
              "2                 0.006985           0.009722           0.005373   \n",
              "3                 0.001826           0.004529           0.006142   \n",
              "\n",
              "         2018_Market_Share  2019_Market_Share  2020_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.000897           0.002071           0.003156   \n",
              "1                 0.000270           0.000258           0.000206   \n",
              "2                 0.002524           0.001125           0.000631   \n",
              "3                 0.006948           0.006600           0.006484   \n",
              "\n",
              "         2021_Market_Share  2022_Market_Share  2023_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.004438           0.005457           0.005605   \n",
              "1                 0.000165           0.000147           0.000172   \n",
              "2                 0.000406           0.000298           0.000469   \n",
              "3                 0.005819           0.004998           0.004318   \n",
              "\n",
              "         2024_Market_Share  2016_Growth_Rate  2017_Growth_Rate  \\\n",
              "Cluster                                                          \n",
              "0                 0.005052          0.939759          0.050194   \n",
              "1                 0.000226          0.055042          0.793644   \n",
              "2                 0.000460         29.987805          1.193264   \n",
              "3                 0.004069          8.520833         14.689217   \n",
              "\n",
              "         2018_Growth_Rate  2019_Growth_Rate  2020_Growth_Rate  \\\n",
              "Cluster                                                         \n",
              "0                4.849516          5.442663          7.732604   \n",
              "1                0.309657          0.302588         -0.038459   \n",
              "2               -0.357085         -0.537036         -0.175913   \n",
              "3                2.374864          0.192229         -0.342540   \n",
              "\n",
              "         2021_Growth_Rate  2022_Growth_Rate  2023_Growth_Rate  \\\n",
              "Cluster                                                         \n",
              "0                6.375759          4.980423          2.299928   \n",
              "1                0.309315          0.649768          2.527304   \n",
              "2                0.302807          1.588625          0.294699   \n",
              "3                0.747358          1.132781          0.706057   \n",
              "\n",
              "         2024_Growth_Rate  Total_Sales  \n",
              "Cluster                                 \n",
              "0               -0.460621  5433.027108  \n",
              "1                0.644931   221.539916  \n",
              "2                0.245488   873.908537  \n",
              "3               -0.172029  5629.479167  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-60a342d0-1f7d-4d5c-9cd9-79be41003748\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2015_Market_Share</th>\n",
              "      <th>2016_Market_Share</th>\n",
              "      <th>2017_Market_Share</th>\n",
              "      <th>2018_Market_Share</th>\n",
              "      <th>2019_Market_Share</th>\n",
              "      <th>2020_Market_Share</th>\n",
              "      <th>2021_Market_Share</th>\n",
              "      <th>2022_Market_Share</th>\n",
              "      <th>2023_Market_Share</th>\n",
              "      <th>2024_Market_Share</th>\n",
              "      <th>2016_Growth_Rate</th>\n",
              "      <th>2017_Growth_Rate</th>\n",
              "      <th>2018_Growth_Rate</th>\n",
              "      <th>2019_Growth_Rate</th>\n",
              "      <th>2020_Growth_Rate</th>\n",
              "      <th>2021_Growth_Rate</th>\n",
              "      <th>2022_Growth_Rate</th>\n",
              "      <th>2023_Growth_Rate</th>\n",
              "      <th>2024_Growth_Rate</th>\n",
              "      <th>Total_Sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.000566</td>\n",
              "      <td>0.000374</td>\n",
              "      <td>0.000216</td>\n",
              "      <td>0.000897</td>\n",
              "      <td>0.002071</td>\n",
              "      <td>0.003156</td>\n",
              "      <td>0.004438</td>\n",
              "      <td>0.005457</td>\n",
              "      <td>0.005605</td>\n",
              "      <td>0.005052</td>\n",
              "      <td>0.939759</td>\n",
              "      <td>0.050194</td>\n",
              "      <td>4.849516</td>\n",
              "      <td>5.442663</td>\n",
              "      <td>7.732604</td>\n",
              "      <td>6.375759</td>\n",
              "      <td>4.980423</td>\n",
              "      <td>2.299928</td>\n",
              "      <td>-0.460621</td>\n",
              "      <td>5433.027108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.000450</td>\n",
              "      <td>0.000205</td>\n",
              "      <td>0.000269</td>\n",
              "      <td>0.000270</td>\n",
              "      <td>0.000258</td>\n",
              "      <td>0.000206</td>\n",
              "      <td>0.000165</td>\n",
              "      <td>0.000147</td>\n",
              "      <td>0.000172</td>\n",
              "      <td>0.000226</td>\n",
              "      <td>0.055042</td>\n",
              "      <td>0.793644</td>\n",
              "      <td>0.309657</td>\n",
              "      <td>0.302588</td>\n",
              "      <td>-0.038459</td>\n",
              "      <td>0.309315</td>\n",
              "      <td>0.649768</td>\n",
              "      <td>2.527304</td>\n",
              "      <td>0.644931</td>\n",
              "      <td>221.539916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.006985</td>\n",
              "      <td>0.009722</td>\n",
              "      <td>0.005373</td>\n",
              "      <td>0.002524</td>\n",
              "      <td>0.001125</td>\n",
              "      <td>0.000631</td>\n",
              "      <td>0.000406</td>\n",
              "      <td>0.000298</td>\n",
              "      <td>0.000469</td>\n",
              "      <td>0.000460</td>\n",
              "      <td>29.987805</td>\n",
              "      <td>1.193264</td>\n",
              "      <td>-0.357085</td>\n",
              "      <td>-0.537036</td>\n",
              "      <td>-0.175913</td>\n",
              "      <td>0.302807</td>\n",
              "      <td>1.588625</td>\n",
              "      <td>0.294699</td>\n",
              "      <td>0.245488</td>\n",
              "      <td>873.908537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.001826</td>\n",
              "      <td>0.004529</td>\n",
              "      <td>0.006142</td>\n",
              "      <td>0.006948</td>\n",
              "      <td>0.006600</td>\n",
              "      <td>0.006484</td>\n",
              "      <td>0.005819</td>\n",
              "      <td>0.004998</td>\n",
              "      <td>0.004318</td>\n",
              "      <td>0.004069</td>\n",
              "      <td>8.520833</td>\n",
              "      <td>14.689217</td>\n",
              "      <td>2.374864</td>\n",
              "      <td>0.192229</td>\n",
              "      <td>-0.342540</td>\n",
              "      <td>0.747358</td>\n",
              "      <td>1.132781</td>\n",
              "      <td>0.706057</td>\n",
              "      <td>-0.172029</td>\n",
              "      <td>5629.479167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60a342d0-1f7d-4d5c-9cd9-79be41003748')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-60a342d0-1f7d-4d5c-9cd9-79be41003748 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-60a342d0-1f7d-4d5c-9cd9-79be41003748');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-8ad6d88b-5c1c-455d-9ef4-eb223863298d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8ad6d88b-5c1c-455d-9ef4-eb223863298d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-8ad6d88b-5c1c-455d-9ef4-eb223863298d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_ed02dd77-9dbb-4014-abd9-1ca429006da5\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_means')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ed02dd77-9dbb-4014-abd9-1ca429006da5 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('cluster_means');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cluster_means",
              "summary": "{\n  \"name\": \"cluster_means\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.003082611709229269,\n        \"min\": 0.00044975736773582677,\n        \"max\": 0.006984999427459064,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00044975736773582677,\n          0.0018257694314032344,\n          0.000565642853102551\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0044803366675812886,\n        \"min\": 0.0002053055634884406,\n        \"max\": 0.009721506099192648,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002053055634884406,\n          0.004528662325692028,\n          0.00037398725219314505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0031999471027823606,\n        \"min\": 0.0002156698723946696,\n        \"max\": 0.006142329183022015,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002685350684935643,\n          0.006142329183022015,\n          0.0002156698723946696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.003012175248025655,\n        \"min\": 0.0002704530087897228,\n        \"max\": 0.006947527379140918,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002704530087897228,\n          0.006947527379140918,\n          0.000896954737505859\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002823230344883324,\n        \"min\": 0.00025778816827332367,\n        \"max\": 0.006600020195243804,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00025778816827332367,\n          0.006600020195243804,\n          0.002071236902866433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002886825146985265,\n        \"min\": 0.0002061306858012345,\n        \"max\": 0.006484148198963627,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002061306858012345,\n          0.006484148198963627,\n          0.0031562255028606745\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0028540525939121874,\n        \"min\": 0.00016474106147372394,\n        \"max\": 0.0058186792012737435,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00016474106147372394,\n          0.0058186792012737435,\n          0.004438136494378744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002896497028707481,\n        \"min\": 0.00014701544680643816,\n        \"max\": 0.005457441875963694,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00014701544680643816,\n          0.004998088854798539,\n          0.005457441875963694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0027330859489870405,\n        \"min\": 0.00017198339308899428,\n        \"max\": 0.005604632065344832,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00017198339308899428,\n          0.004318311010234033,\n          0.005604632065344832\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002469708724463327,\n        \"min\": 0.00022591072472395035,\n        \"max\": 0.005052185837259192,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00022591072472395035,\n          0.004068985614184238,\n          0.005052185837259192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.935910331947946,\n        \"min\": 0.05504201680672269,\n        \"max\": 29.98780487804878,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.05504201680672269,\n          8.520833333333334,\n          0.9397590361445783\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.021085655974418,\n        \"min\": 0.05019407774639226,\n        \"max\": 14.689217133932702,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7936435505502716,\n          14.689217133932702,\n          0.05019407774639226\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.345493942453205,\n        \"min\": -0.35708527502232174,\n        \"max\": 4.849516198085698,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.30965655380234314,\n          2.374864153828079,\n          4.849516198085698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7536826966764245,\n        \"min\": -0.5370363123867952,\n        \"max\": 5.4426632542787,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.30258766785959146,\n          0.19222883073725608,\n          5.4426632542787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.961072135641472,\n        \"min\": -0.3425401222811329,\n        \"max\": 7.732603505508547,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.03845906879869535,\n          -0.3425401222811329,\n          7.732603505508547\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.968598809937264,\n        \"min\": 0.30280708523366895,\n        \"max\": 6.375759347807606,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.3093150631738978,\n          0.7473579921865521,\n          6.375759347807606\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.966082327600514,\n        \"min\": 0.6497679440196824,\n        \"max\": 4.980422813437899,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6497679440196824,\n          1.1327811816427782,\n          4.980422813437899\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.121150639449873,\n        \"min\": 0.29469898478301104,\n        \"max\": 2.5273037104827685,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.5273037104827685,\n          0.7060572854724732,\n          2.2999280075445654\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.483513004659124,\n        \"min\": -0.4606206820544372,\n        \"max\": 0.6449308146000188,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6449308146000188,\n          -0.1720292083058469,\n          -0.4606206820544372\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2890.654454368606,\n        \"min\": 221.53991596638656,\n        \"max\": 5629.479166666667,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          221.53991596638656,\n          5629.479166666667,\n          5433.027108433735\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "248c2e15"
      },
      "source": [
        "## Characterize segments\n",
        "\n",
        "### Subtask:\n",
        "Analyze the characteristics of each identified segment. Understand their size, growth potential, preferred vehicle categories, and dominant makers.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 902
        },
        "id": "75b047af",
        "outputId": "b766f18e-10a5-4588-889d-7d668771156c"
      },
      "source": [
        "# 1. Examine cluster_sizes (already displayed in previous step)\n",
        "print(\"Cluster Sizes:\")\n",
        "display(cluster_sizes)\n",
        "\n",
        "# 2. Analyze cluster_means (already displayed in previous step)\n",
        "print(\"\\nCluster Means (Characteristics of Each Segment):\")\n",
        "display(cluster_means)\n",
        "\n",
        "# 3. Group by Cluster and Cat to understand preferred vehicle categories\n",
        "category_sales_by_cluster = df_ev.groupby('Cluster')['Cat'].value_counts().unstack().fillna(0)\n",
        "print(\"\\nPreferred Vehicle Categories by Cluster:\")\n",
        "display(category_sales_by_cluster)\n",
        "\n",
        "# 4. Identify dominant makers (Focusing on the overall characteristics from cluster means and category sales)\n",
        "# This step is more interpretive based on the cluster_means and category_sales_by_cluster tables.\n",
        "# We can also look at the top makers within each cluster based on Total_Sales, but the cluster means already capture the average scale.\n",
        "\n",
        "# 5. Summarize key characteristics of each cluster and assign descriptive names\n",
        "print(\"\\nSummary and Descriptive Names for Each Cluster:\")\n",
        "\n",
        "# Based on the cluster_means and category_sales_by_cluster:\n",
        "# Cluster 0: High Total Sales, High Market Share across years, Moderate Growth Rates. Dominant in 2W and 3W.\n",
        "# Cluster 1: Lowest Total Sales, Low Market Share, Fluctuating Growth Rates. Dominant in 2W and 3W, but with very low volumes.\n",
        "# Cluster 2: Low Total Sales, Low Market Share across years, Fluctuating or low Growth Rates. Dominant in 2W and 3W, but with very low volumes. Seems similar to Cluster 1 but distinct based on the clustering.\n",
        "# Cluster 3: Moderate Total Sales, Higher Market Share in earlier years, lower in recent years. Higher Growth Rates in earlier years, lower in recent years. Dominant in 3W and then 2W.\n",
        "\n",
        "# Refining based on re-examining cluster_means more closely and category_sales_by_cluster:\n",
        "# Cluster 0: High Sales, moderate growth, established market share. Seems like a mix, but high total sales is key. Predominantly 2W and 3W.\n",
        "# Cluster 1: Very Low Sales, very low market share, very low growth rates. Primarily 2W and 3W, but negligible volume. These are likely very small players or those with minimal EV sales.\n",
        "# Cluster 2: Moderate Sales, lower market share than Cluster 0, fluctuating growth. Higher proportion of 2W and LMV compared to other clusters besides 2W/3W dominance.\n",
        "# Cluster 3: High Growth in early years, moderate sales and market share. Primarily 3W and then 2W. These seem like earlier entrants who captured significant growth.\n",
        "\n",
        "# Let's refine the interpretation based on the actual numbers in cluster_means:\n",
        "# Cluster 0: Highest Avg Total Sales (5433), moderate avg market share across years (e.g., 0.005 in 2024), fluctuating growth but some positive recent years. Predominantly 2W and 3W in volume (from category_sales_by_cluster). -> Established Major Players\n",
        "# Cluster 1: Lowest Avg Total Sales (221), lowest avg market share (e.g., 0.0002 in 2024), lowest growth rates. Primarily 2W and 3W but tiny volume. -> Minor/Niche Players\n",
        "# Cluster 2: Moderate Avg Total Sales (873), low avg market share (e.g., 0.0004 in 2024), fluctuating and often negative growth. Higher proportion of LMV and MMV compared to other low-sales clusters, but still mostly 2W/3W. -> Struggling Players / Niche Categories\n",
        "# Cluster 3: Moderate Avg Total Sales (5629), higher avg market share in earlier years, decreasing in later years. Higher growth rates in earlier years, decreasing in later years. Dominated by 3W and then 2W. -> Early Growth Leaders\n",
        "\n",
        "segment_characteristics = {\n",
        "    0: {\n",
        "        \"Name\": \"Established Major Players\",\n",
        "        \"Characteristics\": \"Highest average total sales and moderate market share across all years. Showed significant sales volume, particularly in 2W and 3W categories. Growth rates are moderate and can fluctuate, indicating a mature phase for some.\"\n",
        "    },\n",
        "    1: {\n",
        "        \"Name\": \"Minor/Niche Players\",\n",
        "        \"Characteristics\": \"Lowest average total sales, market share, and growth rates. Consists of makers with very low sales volumes across all categories, predominantly 2W and 3W but at negligible scale.\"\n",
        "    },\n",
        "    2: {\n",
        "        \"Name\": \"Struggling Players / Niche Categories\",\n",
        "        \"Characteristics\": \"Moderate average total sales but low market share and often fluctuating or negative growth rates. While still primarily 2W/3W by count, this cluster shows a relatively higher proportion of LMV and MMV sales compared to other lower-sales clusters.\"\n",
        "    },\n",
        "    3: {\n",
        "        \"Name\": \"Early Growth Leaders\",\n",
        "        \"Characteristics\": \"Moderate average total sales, with higher market share and growth rates observed in earlier years, which have somewhat decreased in recent years. Dominated by 3W sales, followed by 2W, suggesting these were key players in the initial boom of specific segments.\"\n",
        "    }\n",
        "}\n",
        "\n",
        "for cluster_id, details in segment_characteristics.items():\n",
        "    print(f\"Cluster {cluster_id} ({details['Name']}):\")\n",
        "    print(details['Characteristics'])\n",
        "    print(\"-\" * 30)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster Sizes:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   Cluster  Cluster Size\n",
              "0        1          1190\n",
              "1        0            83\n",
              "2        3            72\n",
              "3        2            41"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4404d5d5-d392-4262-a25f-50c0c8a1b764\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>Cluster Size</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4404d5d5-d392-4262-a25f-50c0c8a1b764')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4404d5d5-d392-4262-a25f-50c0c8a1b764 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4404d5d5-d392-4262-a25f-50c0c8a1b764');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-6f237f57-5ef7-4478-8a6d-796de8e4ec39\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f237f57-5ef7-4478-8a6d-796de8e4ec39')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-6f237f57-5ef7-4478-8a6d-796de8e4ec39 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_3f764217-2454-4476-bc5c-65958576c4a3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_sizes')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3f764217-2454-4476-bc5c-65958576c4a3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('cluster_sizes');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cluster_sizes",
              "summary": "{\n  \"name\": \"cluster_sizes\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 562,\n        \"min\": 41,\n        \"max\": 1190,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          83,\n          41,\n          1190\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Cluster Means (Characteristics of Each Segment):\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "         2015_Market_Share  2016_Market_Share  2017_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.000566           0.000374           0.000216   \n",
              "1                 0.000450           0.000205           0.000269   \n",
              "2                 0.006985           0.009722           0.005373   \n",
              "3                 0.001826           0.004529           0.006142   \n",
              "\n",
              "         2018_Market_Share  2019_Market_Share  2020_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.000897           0.002071           0.003156   \n",
              "1                 0.000270           0.000258           0.000206   \n",
              "2                 0.002524           0.001125           0.000631   \n",
              "3                 0.006948           0.006600           0.006484   \n",
              "\n",
              "         2021_Market_Share  2022_Market_Share  2023_Market_Share  \\\n",
              "Cluster                                                            \n",
              "0                 0.004438           0.005457           0.005605   \n",
              "1                 0.000165           0.000147           0.000172   \n",
              "2                 0.000406           0.000298           0.000469   \n",
              "3                 0.005819           0.004998           0.004318   \n",
              "\n",
              "         2024_Market_Share  2016_Growth_Rate  2017_Growth_Rate  \\\n",
              "Cluster                                                          \n",
              "0                 0.005052          0.939759          0.050194   \n",
              "1                 0.000226          0.055042          0.793644   \n",
              "2                 0.000460         29.987805          1.193264   \n",
              "3                 0.004069          8.520833         14.689217   \n",
              "\n",
              "         2018_Growth_Rate  2019_Growth_Rate  2020_Growth_Rate  \\\n",
              "Cluster                                                         \n",
              "0                4.849516          5.442663          7.732604   \n",
              "1                0.309657          0.302588         -0.038459   \n",
              "2               -0.357085         -0.537036         -0.175913   \n",
              "3                2.374864          0.192229         -0.342540   \n",
              "\n",
              "         2021_Growth_Rate  2022_Growth_Rate  2023_Growth_Rate  \\\n",
              "Cluster                                                         \n",
              "0                6.375759          4.980423          2.299928   \n",
              "1                0.309315          0.649768          2.527304   \n",
              "2                0.302807          1.588625          0.294699   \n",
              "3                0.747358          1.132781          0.706057   \n",
              "\n",
              "         2024_Growth_Rate  Total_Sales  \n",
              "Cluster                                 \n",
              "0               -0.460621  5433.027108  \n",
              "1                0.644931   221.539916  \n",
              "2                0.245488   873.908537  \n",
              "3               -0.172029  5629.479167  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98cd71a6-a69c-444b-9d91-ba03f45a55e0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2015_Market_Share</th>\n",
              "      <th>2016_Market_Share</th>\n",
              "      <th>2017_Market_Share</th>\n",
              "      <th>2018_Market_Share</th>\n",
              "      <th>2019_Market_Share</th>\n",
              "      <th>2020_Market_Share</th>\n",
              "      <th>2021_Market_Share</th>\n",
              "      <th>2022_Market_Share</th>\n",
              "      <th>2023_Market_Share</th>\n",
              "      <th>2024_Market_Share</th>\n",
              "      <th>2016_Growth_Rate</th>\n",
              "      <th>2017_Growth_Rate</th>\n",
              "      <th>2018_Growth_Rate</th>\n",
              "      <th>2019_Growth_Rate</th>\n",
              "      <th>2020_Growth_Rate</th>\n",
              "      <th>2021_Growth_Rate</th>\n",
              "      <th>2022_Growth_Rate</th>\n",
              "      <th>2023_Growth_Rate</th>\n",
              "      <th>2024_Growth_Rate</th>\n",
              "      <th>Total_Sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.000566</td>\n",
              "      <td>0.000374</td>\n",
              "      <td>0.000216</td>\n",
              "      <td>0.000897</td>\n",
              "      <td>0.002071</td>\n",
              "      <td>0.003156</td>\n",
              "      <td>0.004438</td>\n",
              "      <td>0.005457</td>\n",
              "      <td>0.005605</td>\n",
              "      <td>0.005052</td>\n",
              "      <td>0.939759</td>\n",
              "      <td>0.050194</td>\n",
              "      <td>4.849516</td>\n",
              "      <td>5.442663</td>\n",
              "      <td>7.732604</td>\n",
              "      <td>6.375759</td>\n",
              "      <td>4.980423</td>\n",
              "      <td>2.299928</td>\n",
              "      <td>-0.460621</td>\n",
              "      <td>5433.027108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.000450</td>\n",
              "      <td>0.000205</td>\n",
              "      <td>0.000269</td>\n",
              "      <td>0.000270</td>\n",
              "      <td>0.000258</td>\n",
              "      <td>0.000206</td>\n",
              "      <td>0.000165</td>\n",
              "      <td>0.000147</td>\n",
              "      <td>0.000172</td>\n",
              "      <td>0.000226</td>\n",
              "      <td>0.055042</td>\n",
              "      <td>0.793644</td>\n",
              "      <td>0.309657</td>\n",
              "      <td>0.302588</td>\n",
              "      <td>-0.038459</td>\n",
              "      <td>0.309315</td>\n",
              "      <td>0.649768</td>\n",
              "      <td>2.527304</td>\n",
              "      <td>0.644931</td>\n",
              "      <td>221.539916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.006985</td>\n",
              "      <td>0.009722</td>\n",
              "      <td>0.005373</td>\n",
              "      <td>0.002524</td>\n",
              "      <td>0.001125</td>\n",
              "      <td>0.000631</td>\n",
              "      <td>0.000406</td>\n",
              "      <td>0.000298</td>\n",
              "      <td>0.000469</td>\n",
              "      <td>0.000460</td>\n",
              "      <td>29.987805</td>\n",
              "      <td>1.193264</td>\n",
              "      <td>-0.357085</td>\n",
              "      <td>-0.537036</td>\n",
              "      <td>-0.175913</td>\n",
              "      <td>0.302807</td>\n",
              "      <td>1.588625</td>\n",
              "      <td>0.294699</td>\n",
              "      <td>0.245488</td>\n",
              "      <td>873.908537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.001826</td>\n",
              "      <td>0.004529</td>\n",
              "      <td>0.006142</td>\n",
              "      <td>0.006948</td>\n",
              "      <td>0.006600</td>\n",
              "      <td>0.006484</td>\n",
              "      <td>0.005819</td>\n",
              "      <td>0.004998</td>\n",
              "      <td>0.004318</td>\n",
              "      <td>0.004069</td>\n",
              "      <td>8.520833</td>\n",
              "      <td>14.689217</td>\n",
              "      <td>2.374864</td>\n",
              "      <td>0.192229</td>\n",
              "      <td>-0.342540</td>\n",
              "      <td>0.747358</td>\n",
              "      <td>1.132781</td>\n",
              "      <td>0.706057</td>\n",
              "      <td>-0.172029</td>\n",
              "      <td>5629.479167</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98cd71a6-a69c-444b-9d91-ba03f45a55e0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-98cd71a6-a69c-444b-9d91-ba03f45a55e0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-98cd71a6-a69c-444b-9d91-ba03f45a55e0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a1fd6a81-f327-4933-bcd7-08eca8d2051f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a1fd6a81-f327-4933-bcd7-08eca8d2051f')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a1fd6a81-f327-4933-bcd7-08eca8d2051f button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_2a036cd4-8dbc-4ef8-9450-f5dc6fa0339a\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_means')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2a036cd4-8dbc-4ef8-9450-f5dc6fa0339a button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('cluster_means');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cluster_means",
              "summary": "{\n  \"name\": \"cluster_means\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2015_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.003082611709229269,\n        \"min\": 0.00044975736773582677,\n        \"max\": 0.006984999427459064,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00044975736773582677,\n          0.0018257694314032344,\n          0.000565642853102551\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0044803366675812886,\n        \"min\": 0.0002053055634884406,\n        \"max\": 0.009721506099192648,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002053055634884406,\n          0.004528662325692028,\n          0.00037398725219314505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0031999471027823606,\n        \"min\": 0.0002156698723946696,\n        \"max\": 0.006142329183022015,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002685350684935643,\n          0.006142329183022015,\n          0.0002156698723946696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.003012175248025655,\n        \"min\": 0.0002704530087897228,\n        \"max\": 0.006947527379140918,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002704530087897228,\n          0.006947527379140918,\n          0.000896954737505859\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002823230344883324,\n        \"min\": 0.00025778816827332367,\n        \"max\": 0.006600020195243804,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00025778816827332367,\n          0.006600020195243804,\n          0.002071236902866433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002886825146985265,\n        \"min\": 0.0002061306858012345,\n        \"max\": 0.006484148198963627,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0002061306858012345,\n          0.006484148198963627,\n          0.0031562255028606745\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0028540525939121874,\n        \"min\": 0.00016474106147372394,\n        \"max\": 0.0058186792012737435,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00016474106147372394,\n          0.0058186792012737435,\n          0.004438136494378744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002896497028707481,\n        \"min\": 0.00014701544680643816,\n        \"max\": 0.005457441875963694,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00014701544680643816,\n          0.004998088854798539,\n          0.005457441875963694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0027330859489870405,\n        \"min\": 0.00017198339308899428,\n        \"max\": 0.005604632065344832,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00017198339308899428,\n          0.004318311010234033,\n          0.005604632065344832\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024_Market_Share\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.002469708724463327,\n        \"min\": 0.00022591072472395035,\n        \"max\": 0.005052185837259192,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.00022591072472395035,\n          0.004068985614184238,\n          0.005052185837259192\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2016_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.935910331947946,\n        \"min\": 0.05504201680672269,\n        \"max\": 29.98780487804878,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.05504201680672269,\n          8.520833333333334,\n          0.9397590361445783\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2017_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.021085655974418,\n        \"min\": 0.05019407774639226,\n        \"max\": 14.689217133932702,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7936435505502716,\n          14.689217133932702,\n          0.05019407774639226\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2018_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.345493942453205,\n        \"min\": -0.35708527502232174,\n        \"max\": 4.849516198085698,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.30965655380234314,\n          2.374864153828079,\n          4.849516198085698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2019_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7536826966764245,\n        \"min\": -0.5370363123867952,\n        \"max\": 5.4426632542787,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.30258766785959146,\n          0.19222883073725608,\n          5.4426632542787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.961072135641472,\n        \"min\": -0.3425401222811329,\n        \"max\": 7.732603505508547,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.03845906879869535,\n          -0.3425401222811329,\n          7.732603505508547\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2021_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.968598809937264,\n        \"min\": 0.30280708523366895,\n        \"max\": 6.375759347807606,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.3093150631738978,\n          0.7473579921865521,\n          6.375759347807606\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2022_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.966082327600514,\n        \"min\": 0.6497679440196824,\n        \"max\": 4.980422813437899,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6497679440196824,\n          1.1327811816427782,\n          4.980422813437899\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2023_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.121150639449873,\n        \"min\": 0.29469898478301104,\n        \"max\": 2.5273037104827685,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.5273037104827685,\n          0.7060572854724732,\n          2.2999280075445654\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2024_Growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.483513004659124,\n        \"min\": -0.4606206820544372,\n        \"max\": 0.6449308146000188,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6449308146000188,\n          -0.1720292083058469,\n          -0.4606206820544372\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2890.654454368606,\n        \"min\": 221.53991596638656,\n        \"max\": 5629.479166666667,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          221.53991596638656,\n          5629.479166666667,\n          5433.027108433735\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Preferred Vehicle Categories by Cluster:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Cat         2W     3W    LMV   MMV\n",
              "Cluster                           \n",
              "0         23.0   54.0    6.0   0.0\n",
              "1        227.0  713.0  233.0  17.0\n",
              "2          7.0   32.0    2.0   0.0\n",
              "3          4.0   67.0    1.0   0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19c4a41c-4236-437f-971c-84eb8ea20b5a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Cat</th>\n",
              "      <th>2W</th>\n",
              "      <th>3W</th>\n",
              "      <th>LMV</th>\n",
              "      <th>MMV</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cluster</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>23.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>227.0</td>\n",
              "      <td>713.0</td>\n",
              "      <td>233.0</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4.0</td>\n",
              "      <td>67.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19c4a41c-4236-437f-971c-84eb8ea20b5a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19c4a41c-4236-437f-971c-84eb8ea20b5a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19c4a41c-4236-437f-971c-84eb8ea20b5a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-369bd3d5-a709-4ecd-9b42-7410bc321c32\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-369bd3d5-a709-4ecd-9b42-7410bc321c32')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-369bd3d5-a709-4ecd-9b42-7410bc321c32 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_79a6ca6e-c138-4ec6-accd-0bfb052c88c2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('category_sales_by_cluster')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_79a6ca6e-c138-4ec6-accd-0bfb052c88c2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('category_sales_by_cluster');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "category_sales_by_cluster",
              "summary": "{\n  \"name\": \"category_sales_by_cluster\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108.15536664138925,\n        \"min\": 4.0,\n        \"max\": 227.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          227.0,\n          4.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3W\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 331.3150565046308,\n        \"min\": 32.0,\n        \"max\": 713.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          713.0,\n          67.0,\n          54.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LMV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115.02028806548289,\n        \"min\": 1.0,\n        \"max\": 233.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          233.0,\n          1.0,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MMV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.5,\n        \"min\": 0.0,\n        \"max\": 17.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          17.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Summary and Descriptive Names for Each Cluster:\n",
            "Cluster 0 (Established Major Players):\n",
            "Highest average total sales and moderate market share across all years. Showed significant sales volume, particularly in 2W and 3W categories. Growth rates are moderate and can fluctuate, indicating a mature phase for some.\n",
            "------------------------------\n",
            "Cluster 1 (Minor/Niche Players):\n",
            "Lowest average total sales, market share, and growth rates. Consists of makers with very low sales volumes across all categories, predominantly 2W and 3W but at negligible scale.\n",
            "------------------------------\n",
            "Cluster 2 (Struggling Players / Niche Categories):\n",
            "Moderate average total sales but low market share and often fluctuating or negative growth rates. While still primarily 2W/3W by count, this cluster shows a relatively higher proportion of LMV and MMV sales compared to other lower-sales clusters.\n",
            "------------------------------\n",
            "Cluster 3 (Early Growth Leaders):\n",
            "Moderate average total sales, with higher market share and growth rates observed in earlier years, which have somewhat decreased in recent years. Dominated by 3W sales, followed by 2W, suggesting these were key players in the initial boom of specific segments.\n",
            "------------------------------\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7c5ba4bc"
      },
      "source": [
        "## Identify target segments\n",
        "\n",
        "### Subtask:\n",
        "Based on the segmentation analysis, identify the segments that represent the most promising opportunities for market entry. Justify the selection of these target segments.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fde074a8",
        "outputId": "3c1fc703-19fe-4dec-987a-640f8e9b977f"
      },
      "source": [
        "# Identify promising segments based on the analysis of cluster_means and category_sales_by_cluster\n",
        "\n",
        "# Promising segments are those with:\n",
        "# 1. Significant market size (indicated by average Total_Sales and cluster size)\n",
        "# 2. Growth potential (indicated by average Growth_Rate trends)\n",
        "# 3. Alignment with potential product offerings (likely 2W and 3W given the market dominance)\n",
        "# 4. Manageable competition (avoiding segments with only a few dominant, unassailable players, or too many tiny players)\n",
        "\n",
        "# Revisit the characteristics:\n",
        "# Cluster 0 (Established Major Players): Highest sales, moderate market share, fluctuating growth. Large market size. High competition.\n",
        "# Cluster 1 (Minor/Niche Players): Lowest sales, market share, growth. Very small market size. Low competition but also low reward.\n",
        "# Cluster 2 (Struggling Players / Niche Categories): Moderate sales, low market share, often negative/fluctuating growth. Moderate market size but potentially difficult due to struggling players. Higher LMV/MMV representation among lower sales clusters.\n",
        "# Cluster 3 (Early Growth Leaders): Moderate sales, high growth in earlier years, decreasing recently. Moderate market size. Dominated by 3W and 2W. Suggests a segment that was receptive to new entrants and growth.\n",
        "\n",
        "# Considering market entry for a new player:\n",
        "# - Cluster 0 is large but highly competitive with established players. Difficult to gain significant share quickly.\n",
        "# - Cluster 1 is too small to be a primary target, though it might contain very niche opportunities.\n",
        "# - Cluster 2 has struggling players, which could indicate opportunities if the struggles are due to factors a new entrant can address, but the overall growth is concerning. The higher LMV/MMV mix might be relevant for specific offerings.\n",
        "# - Cluster 3 represents a segment that has shown high receptivity to growth and new offerings in the past, particularly in 3W and 2W. While growth has slowed from its peak, the moderate average sales and the history of rapid expansion make it potentially attractive for a new entrant who can innovate or compete effectively.\n",
        "\n",
        "# Based on this, Cluster 3 appears to be the most promising segment for market entry.\n",
        "# Cluster 0 is also promising due to its size, but competition is a significant barrier.\n",
        "# Cluster 2 might be a secondary target depending on the specific product offering (e.g., LMV/MMV focus) and the analysis of why players are struggling.\n",
        "\n",
        "# Let's select Cluster 3 as the primary target segment and justify.\n",
        "target_segments = [3] # Primary target: Early Growth Leaders\n",
        "\n",
        "print(f\"Target Segments for Market Entry: Cluster {target_segments[0]} (Early Growth Leaders)\")\n",
        "\n",
        "print(\"\\nJustification for Target Segment Selection:\")\n",
        "print(f\"\\nTarget Segment: Cluster {target_segments[0]} - Early Growth Leaders\")\n",
        "print(\"Characteristics:\")\n",
        "print(segment_characteristics[target_segments[0]]['Characteristics'])\n",
        "\n",
        "print(\"\\nWhy this segment is promising:\")\n",
        "print(f\"1. Demonstrated Growth Potential: Cluster {target_segments[0]} showed high growth rates in earlier years, indicating a market segment that is receptive to new EV offerings and has a history of rapid expansion. While growth has moderated, the underlying potential for a resurgence with innovative products exists.\")\n",
        "print(f\"2. Significant Market Size: With moderate average total sales and a decent number of makers ({cluster_sizes[cluster_sizes['Cluster'] == target_segments[0]]['Cluster Size'].iloc[0]} makers), this segment represents a viable market size, larger than the niche players.\")\n",
        "print(f\"3. Dominance in Key Categories: This segment is dominated by 3W and 2W sales, which are the fastest-growing and largest categories in the Indian EV market. Targeting this segment allows a new entrant to focus on the most dynamic parts of the market.\")\n",
        "print(f\"4. Potential for Disruption: Unlike the 'Established Major Players' (Cluster 0) who might be entrenched, the 'Early Growth Leaders' (Cluster 3), while successful, might be more susceptible to disruption from a new entrant with superior technology, business model, or marketing strategy, especially as their own growth rates have decreased from peak.\")\n",
        "\n",
        "# Optional: Discuss secondary target segments if applicable\n",
        "# print(\"\\nSecondary Target Segments (Optional):\")\n",
        "# print(\"Cluster 0 (Established Major Players): While highly competitive, the sheer size of this segment means even a small market share can be significant. Could be a long-term target after establishing a foothold.\")\n",
        "# print(\"Cluster 2 (Struggling Players / Niche Categories): Could be promising for a new entrant focusing specifically on LMV or MMV segments, or if the new entrant has a strategy to overcome the challenges faced by current players in this cluster.\")\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Target Segments for Market Entry: Cluster 3 (Early Growth Leaders)\n",
            "\n",
            "Justification for Target Segment Selection:\n",
            "\n",
            "Target Segment: Cluster 3 - Early Growth Leaders\n",
            "Characteristics:\n",
            "Moderate average total sales, with higher market share and growth rates observed in earlier years, which have somewhat decreased in recent years. Dominated by 3W sales, followed by 2W, suggesting these were key players in the initial boom of specific segments.\n",
            "\n",
            "Why this segment is promising:\n",
            "1. Demonstrated Growth Potential: Cluster 3 showed high growth rates in earlier years, indicating a market segment that is receptive to new EV offerings and has a history of rapid expansion. While growth has moderated, the underlying potential for a resurgence with innovative products exists.\n",
            "2. Significant Market Size: With moderate average total sales and a decent number of makers (72 makers), this segment represents a viable market size, larger than the niche players.\n",
            "3. Dominance in Key Categories: This segment is dominated by 3W and 2W sales, which are the fastest-growing and largest categories in the Indian EV market. Targeting this segment allows a new entrant to focus on the most dynamic parts of the market.\n",
            "4. Potential for Disruption: Unlike the 'Established Major Players' (Cluster 0) who might be entrenched, the 'Early Growth Leaders' (Cluster 3), while successful, might be more susceptible to disruption from a new entrant with superior technology, business model, or marketing strategy, especially as their own growth rates have decreased from peak.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8149e573"
      },
      "source": [
        "## Develop market entry strategy\n",
        "\n",
        "### Subtask:\n",
        "Propose a feasible market entry strategy tailored to the identified target segments. This could include recommendations on which vehicle categories to focus on, potential partnerships with existing makers, pricing strategies, and marketing approaches.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b186af2f",
        "outputId": "98dd21a2-b8f0-4067-dcca-22646565d279"
      },
      "source": [
        "# 1. Recommend primary vehicle category/categories to focus on\n",
        "print(\"Recommended Primary Vehicle Categories for Market Entry in Cluster 3 (Early Growth Leaders):\")\n",
        "# From the category_sales_by_cluster, Cluster 3 is dominated by 3W and then 2W.\n",
        "# The target segment's history of growth was significantly in 3W.\n",
        "# Both 2W and 3W are the largest and fastest-growing segments in the overall Indian EV market.\n",
        "print(\"- Focus primarily on the **Three Wheeler (3W)** category.\")\n",
        "print(\"  Justification: Cluster 3, the target segment, is heavily dominated by 3W sales. This indicates that makers in this segment have found success and growth in the 3W market. The 3W segment is also one of the largest and fastest-growing EV categories in India overall, driven by commercial use cases (e.g., last-mile connectivity, goods transport).\")\n",
        "print(\"- Consider the **Two Wheeler (2W)** category as a secondary focus or future expansion.\")\n",
        "print(\"  Justification: While 3W is dominant in Cluster 3, 2W is the second most represented category and is the largest EV segment in India by volume. Entering the 2W market could provide access to a larger customer base (personal mobility) but may face different competitive dynamics than 3W.\")\n",
        "\n",
        "# 2. Discuss potential approaches for market entry\n",
        "print(\"\\nPotential Market Entry Approaches:\")\n",
        "print(\"- **Forming Partnerships or Joint Ventures:** This is likely the most feasible approach for a new entrant in the Indian EV market, especially when targeting a segment like Cluster 3 which includes existing, albeit not necessarily dominant, players. Potential partners could include:\")\n",
        "print(\"  - Existing Indian EV manufacturers (especially those in or adjacent to Cluster 3): Leverage their local manufacturing capabilities, distribution networks, and understanding of the Indian market and regulations.\")\n",
        "print(\"  - Battery technology providers: Secure reliable and cost-effective battery supply, which is a critical component.\")\n",
        "print(\"  - Charging infrastructure companies: Address range anxiety and build a supporting ecosystem.\")\n",
        "print(\"  - Local component suppliers: Ensure cost-effective production and localization to potentially benefit from government incentives.\")\n",
        "print(\"  Justification: Partnerships can mitigate risks associated with establishing operations from scratch, navigating regulatory complexities, building a supply chain, and gaining market acceptance in a new country.\")\n",
        "print(\"- **Entering Independently with a New Brand:** This is a higher-risk, higher-reward approach. It requires significant investment in setting up manufacturing, distribution, service networks, and brand building. It might be suitable if the new entrant has truly disruptive technology or a unique value proposition that cannot be easily replicated by existing players or through partnerships.\")\n",
        "print(\"  Justification: Allows full control over strategy and execution but faces significant barriers to entry in a competitive market.\")\n",
        "print(\"- **Acquiring a Smaller Player within the Target Segment:** This could provide an immediate market presence, access to existing customers, technology, and potentially manufacturing assets. However, careful due diligence is required to ensure the acquired company is a good strategic fit and free of significant liabilities.\")\n",
        "print(\"  Justification: Offers a quicker path to market presence than independent entry, but integration challenges and the cost of acquisition can be high.\")\n",
        "print(\"\\nRecommendation: A phased approach starting with **partnerships/joint ventures** in the 3W segment appears most feasible, potentially followed by independent expansion or acquisition once a strong foothold is established.\")\n",
        "\n",
        "# 3. Propose high-level pricing strategy considerations\n",
        "print(\"\\nHigh-Level Pricing Strategy Considerations for 3W EVs in Cluster 3:\")\n",
        "print(\"- **Value-Based Pricing with a Competitive Edge:** Given that 3W EVs are often used for commercial purposes where total cost of ownership (TCO) is critical, a value-based pricing strategy is recommended. This means pricing should reflect the long-term savings and benefits of switching to EV (lower fuel costs, maintenance) compared to traditional vehicles.\")\n",
        "print(\"  - The initial purchase price should be competitive with existing EV offerings in the target segment (Cluster 3) and also consider the price point of internal combustion engine (ICE) 3Ws, highlighting the TCO advantage.\")\n",
        "print(\"  - Consider offering financing options or leasing models to lower the initial barrier to entry.\")\n",
        "print(\"  Justification: Customers in the commercial vehicle segment are highly price-sensitive regarding TCO. A value-based approach that is competitive on the initial price can drive adoption.\")\n",
        "\n",
        "# 4. Suggest key marketing and distribution strategies\n",
        "print(\"\\nKey Marketing and Distribution Strategies:\")\n",
        "print(\"- **Distribution:**\")\n",
        "print(\"  - Establish a strong dealer and service network, initially focusing on regions with high commercial activity and existing EV adoption (potentially identified from the original state-level data if available).\")\n",
        "print(\"  - Partner with fleet operators, last-mile delivery companies, and e-commerce platforms who are significant users of 3Ws.\")\n",
        "print(\"  - Explore direct sales models for large fleet orders.\")\n",
        "print(\"- **Marketing:**\")\n",
        "print(\"  - **Messaging:** Emphasize the economic benefits (cost savings on fuel and maintenance), environmental advantages, reliability, and potentially higher earning potential due to lower operating costs.\")\n",
        "print(\"  - **Channels:** Utilize local dealerships, commercial vehicle expos, online platforms targeting fleet owners and commercial drivers, and potentially partnerships with financing institutions.\")\n",
        "print(\"  - **Building Trust and Awareness:** Offer test drives, provide excellent after-sales service and support, highlight safety features, and potentially engage with local communities or driver associations.\")\n",
        "print(\"  - **Leverage Government Incentives:** Clearly communicate and help customers access available central and state government subsidies and incentives for EV purchases and charging infrastructure.\")\n",
        "\n",
        "# 5. Consider specific challenges or opportunities and how the strategy addresses them\n",
        "print(\"\\nSpecific Challenges and Opportunities in the Indian EV Market and how the Strategy Addresses Them:\")\n",
        "print(\"- **Challenge: Charging Infrastructure:** Lack of widespread and reliable charging infrastructure is a major concern, especially for commercial vehicles that need quick turnaround times.\")\n",
        "print(\"  - Strategy Addressal: Partnerships with charging infrastructure providers and focusing on fleet operators (who can set up captive charging) can help mitigate this. Offering vehicles with swappable battery technology could also be a solution.\")\n",
        "print(\"- **Challenge: Battery Costs and Life:** High initial battery costs and concerns about battery life and replacement costs are barriers.\")\n",
        "print(\"  - Strategy Addressal: Competitive and value-based pricing that factors in battery life and potential replacement costs, transparent warranty policies, and potentially battery-as-a-service models can help.\")\n",
        "print(\"- **Challenge: Service and Maintenance Network:** A lack of trained technicians and service centers for EVs can deter buyers.\")\n",
        "print(\"  - Strategy Addressal: Building a robust service network, training local mechanics, and ensuring availability of spare parts are crucial. Partnerships with existing service providers could accelerate this.\")\n",
        "print(\"- **Opportunity: Government Support:** The Indian government is actively promoting EV adoption through subsidies, tax benefits, and mandates.\")\n",
        "print(\"  - Strategy Addressal: Aligning the product and strategy with government policies and incentives is essential to reduce costs for consumers and gain a competitive advantage.\")\n",
        "print(\"- **Opportunity: Growing Demand in Commercial Segment:** The increasing demand for last-mile delivery and logistics is driving the need for cost-effective and sustainable transport solutions like 3W EVs.\")\n",
        "print(\"  - Strategy Addressal: Focusing on the 3W segment directly targets this high-demand area.\")\n",
        "\n",
        "# 6. Summarize the key components of the proposed market entry strategy\n",
        "print(\"\\nSummary of Proposed Market Entry Strategy:\")\n",
        "print(\"1.  **Target Segment:** Cluster 3 - Early Growth Leaders.\")\n",
        "print(\"2.  **Primary Vehicle Category:** Three Wheelers (3W), with Two Wheelers (2W) as a secondary focus.\")\n",
        "print(\"3.  **Entry Approach:** Phased approach, starting with Partnerships/Joint Ventures with existing players, battery providers, and charging companies.\")\n",
        "print(\"4.  **Pricing Strategy:** Value-Based Pricing with a Competitive Edge, emphasizing TCO and leveraging financing/leasing.\")\n",
        "print(\"5.  **Marketing & Distribution:** Build strong dealer/service network, partner with fleet operators, emphasize economic benefits in marketing, utilize targeted channels, and leverage government incentives.\")\n",
        "print(\"6.  **Addressing Challenges:** Proactive partnerships for charging and service, transparent battery policies, and aligning with government support.\")\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Recommended Primary Vehicle Categories for Market Entry in Cluster 3 (Early Growth Leaders):\n",
            "- Focus primarily on the **Three Wheeler (3W)** category.\n",
            "  Justification: Cluster 3, the target segment, is heavily dominated by 3W sales. This indicates that makers in this segment have found success and growth in the 3W market. The 3W segment is also one of the largest and fastest-growing EV categories in India overall, driven by commercial use cases (e.g., last-mile connectivity, goods transport).\n",
            "- Consider the **Two Wheeler (2W)** category as a secondary focus or future expansion.\n",
            "  Justification: While 3W is dominant in Cluster 3, 2W is the second most represented category and is the largest EV segment in India by volume. Entering the 2W market could provide access to a larger customer base (personal mobility) but may face different competitive dynamics than 3W.\n",
            "\n",
            "Potential Market Entry Approaches:\n",
            "- **Forming Partnerships or Joint Ventures:** This is likely the most feasible approach for a new entrant in the Indian EV market, especially when targeting a segment like Cluster 3 which includes existing, albeit not necessarily dominant, players. Potential partners could include:\n",
            "  - Existing Indian EV manufacturers (especially those in or adjacent to Cluster 3): Leverage their local manufacturing capabilities, distribution networks, and understanding of the Indian market and regulations.\n",
            "  - Battery technology providers: Secure reliable and cost-effective battery supply, which is a critical component.\n",
            "  - Charging infrastructure companies: Address range anxiety and build a supporting ecosystem.\n",
            "  - Local component suppliers: Ensure cost-effective production and localization to potentially benefit from government incentives.\n",
            "  Justification: Partnerships can mitigate risks associated with establishing operations from scratch, navigating regulatory complexities, building a supply chain, and gaining market acceptance in a new country.\n",
            "- **Entering Independently with a New Brand:** This is a higher-risk, higher-reward approach. It requires significant investment in setting up manufacturing, distribution, service networks, and brand building. It might be suitable if the new entrant has truly disruptive technology or a unique value proposition that cannot be easily replicated by existing players or through partnerships.\n",
            "  Justification: Allows full control over strategy and execution but faces significant barriers to entry in a competitive market.\n",
            "- **Acquiring a Smaller Player within the Target Segment:** This could provide an immediate market presence, access to existing customers, technology, and potentially manufacturing assets. However, careful due diligence is required to ensure the acquired company is a good strategic fit and free of significant liabilities.\n",
            "  Justification: Offers a quicker path to market presence than independent entry, but integration challenges and the cost of acquisition can be high.\n",
            "\n",
            "Recommendation: A phased approach starting with **partnerships/joint ventures** in the 3W segment appears most feasible, potentially followed by independent expansion or acquisition once a strong foothold is established.\n",
            "\n",
            "High-Level Pricing Strategy Considerations for 3W EVs in Cluster 3:\n",
            "- **Value-Based Pricing with a Competitive Edge:** Given that 3W EVs are often used for commercial purposes where total cost of ownership (TCO) is critical, a value-based pricing strategy is recommended. This means pricing should reflect the long-term savings and benefits of switching to EV (lower fuel costs, maintenance) compared to traditional vehicles.\n",
            "  - The initial purchase price should be competitive with existing EV offerings in the target segment (Cluster 3) and also consider the price point of internal combustion engine (ICE) 3Ws, highlighting the TCO advantage.\n",
            "  - Consider offering financing options or leasing models to lower the initial barrier to entry.\n",
            "  Justification: Customers in the commercial vehicle segment are highly price-sensitive regarding TCO. A value-based approach that is competitive on the initial price can drive adoption.\n",
            "\n",
            "Key Marketing and Distribution Strategies:\n",
            "- **Distribution:**\n",
            "  - Establish a strong dealer and service network, initially focusing on regions with high commercial activity and existing EV adoption (potentially identified from the original state-level data if available).\n",
            "  - Partner with fleet operators, last-mile delivery companies, and e-commerce platforms who are significant users of 3Ws.\n",
            "  - Explore direct sales models for large fleet orders.\n",
            "- **Marketing:**\n",
            "  - **Messaging:** Emphasize the economic benefits (cost savings on fuel and maintenance), environmental advantages, reliability, and potentially higher earning potential due to lower operating costs.\n",
            "  - **Channels:** Utilize local dealerships, commercial vehicle expos, online platforms targeting fleet owners and commercial drivers, and potentially partnerships with financing institutions.\n",
            "  - **Building Trust and Awareness:** Offer test drives, provide excellent after-sales service and support, highlight safety features, and potentially engage with local communities or driver associations.\n",
            "  - **Leverage Government Incentives:** Clearly communicate and help customers access available central and state government subsidies and incentives for EV purchases and charging infrastructure.\n",
            "\n",
            "Specific Challenges and Opportunities in the Indian EV Market and how the Strategy Addresses Them:\n",
            "- **Challenge: Charging Infrastructure:** Lack of widespread and reliable charging infrastructure is a major concern, especially for commercial vehicles that need quick turnaround times.\n",
            "  - Strategy Addressal: Partnerships with charging infrastructure providers and focusing on fleet operators (who can set up captive charging) can help mitigate this. Offering vehicles with swappable battery technology could also be a solution.\n",
            "- **Challenge: Battery Costs and Life:** High initial battery costs and concerns about battery life and replacement costs are barriers.\n",
            "  - Strategy Addressal: Competitive and value-based pricing that factors in battery life and potential replacement costs, transparent warranty policies, and potentially battery-as-a-service models can help.\n",
            "- **Challenge: Service and Maintenance Network:** A lack of trained technicians and service centers for EVs can deter buyers.\n",
            "  - Strategy Addressal: Building a robust service network, training local mechanics, and ensuring availability of spare parts are crucial. Partnerships with existing service providers could accelerate this.\n",
            "- **Opportunity: Government Support:** The Indian government is actively promoting EV adoption through subsidies, tax benefits, and mandates.\n",
            "  - Strategy Addressal: Aligning the product and strategy with government policies and incentives is essential to reduce costs for consumers and gain a competitive advantage.\n",
            "- **Opportunity: Growing Demand in Commercial Segment:** The increasing demand for last-mile delivery and logistics is driving the need for cost-effective and sustainable transport solutions like 3W EVs.\n",
            "  - Strategy Addressal: Focusing on the 3W segment directly targets this high-demand area.\n",
            "\n",
            "Summary of Proposed Market Entry Strategy:\n",
            "1.  **Target Segment:** Cluster 3 - Early Growth Leaders.\n",
            "2.  **Primary Vehicle Category:** Three Wheelers (3W), with Two Wheelers (2W) as a secondary focus.\n",
            "3.  **Entry Approach:** Phased approach, starting with Partnerships/Joint Ventures with existing players, battery providers, and charging companies.\n",
            "4.  **Pricing Strategy:** Value-Based Pricing with a Competitive Edge, emphasizing TCO and leveraging financing/leasing.\n",
            "5.  **Marketing & Distribution:** Build strong dealer/service network, partner with fleet operators, emphasize economic benefits in marketing, utilize targeted channels, and leverage government incentives.\n",
            "6.  **Addressing Challenges:** Proactive partnerships for charging and service, transparent battery policies, and aligning with government support.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "44ada1e3"
      },
      "source": [
        "## Summarize findings and recommendations\n",
        "\n",
        "### Subtask:\n",
        "Present the key findings from the analysis and the proposed market entry strategy in a clear and concise manner.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f0cde1b2",
        "outputId": "86509832-c451-456c-93e5-bb2544df2476"
      },
      "source": [
        "print(\"## Key Findings from EV Market Analysis and Proposed Market Entry Strategy in India\\n\")\n",
        "\n",
        "print(\"### 1. Key Insights from Exploratory Data Analysis (EDA)\\n\")\n",
        "print(\"- The Indian EV market is experiencing significant growth, particularly in the **Three Wheeler (3W)** and **Two Wheeler (2W)** segments.\")\n",
        "print(\"- These categories dominate the market in terms of sales volume and exhibit strong upward trends over the past few years.\")\n",
        "print(\"- Light Motor Vehicles (LMV) and Medium Motor Vehicles (MMV) electric vehicle sales are significantly lower compared to 2W and 3W.\")\n",
        "print(\"- Analysis of individual EV makers reveals varying performance, with some showing rapid and sustained growth, indicating successful strategies and market acceptance.\")\n",
        "\n",
        "print(\"### 2. Market Segmentation and Target Segment Identification\\n\")\n",
        "print(\"- K-Means clustering was applied to segment EV makers based on market share, growth rates, and total sales.\")\n",
        "print(\"- Four distinct segments were identified:\")\n",
        "print(\"  - **Cluster 0:** Established Major Players (Highest average sales, moderate market share)\")\n",
        "print(\"  - **Cluster 1:** Minor/Niche Players (Lowest average sales, market share, and growth)\")\n",
        "print(\"  - **Cluster 2:** Struggling Players / Niche Categories (Moderate sales, low share, volatile growth, includes some LMV/MMV makers)\")\n",
        "print(\"  - **Cluster 3:** Early Growth Leaders (Moderate sales, high historical growth, dominated by 3W/2W)\")\n",
        "print(\"- **Cluster 3 (Early Growth Leaders)** was identified as the most promising target segment for market entry.\")\n",
        "print(\"- This segment was chosen due to its demonstrated history of high growth, significant market size, and concentration in the dominant 3W and 2W categories, suggesting receptiveness to new offerings.\")\n",
        "\n",
        "print(\"### 3. Proposed Market Entry Strategy for Early Growth Leaders (Cluster 3)\\n\")\n",
        "print(\"Based on the analysis of Cluster 3, the following market entry strategy is proposed:\\n\")\n",
        "\n",
        "print(\"#### Recommended Vehicle Category Focus:\")\n",
        "print(\"- **Primary Focus: Three Wheelers (3W).** This aligns directly with the dominant category in the target segment and is a high-growth area in the overall market, driven by commercial applications where TCO is a key driver.\")\n",
        "print(\"- **Secondary Focus: Two Wheelers (2W).** As the largest EV segment by volume, the 2W market in this cluster offers potential for broader reach, particularly in personal mobility.\")\n",
        "\n",
        "print(\"#### Suggested Entry Approach:\")\n",
        "print(\"- **Phased Entry Starting with Partnerships/Joint Ventures.** Partnering with existing Indian EV manufacturers (especially those in or adjacent to Cluster 3), battery suppliers, and charging infrastructure companies can mitigate risks related to market understanding, regulations, supply chain, and infrastructure challenges.\")\n",
        "print(\"- **Potential for Independent Expansion or Acquisition:** Once a strong market position is established through partnerships, consider independent operations or acquiring a smaller, strategically aligned player within the segment.\")\n",
        "\n",
        "print(\"#### High-Level Pricing Strategy:\")\n",
        "print(\"- **Value-Based Pricing with a Competitive Edge.** For 3W EVs, emphasize the Total Cost of Ownership (TCO) advantage over ICE vehicles (lower fuel, maintenance costs). Price competitively against existing EV offerings in Cluster 3, potentially offering financing or leasing options to lower the initial purchase barrier.\")\n",
        "\n",
        "print(\"#### Key Marketing and Distribution Considerations:\")\n",
        "print(\"- **Distribution Network:** Build a strong dealer and service network focused on regions with high commercial activity and existing EV adoption. Partner with fleet operators and logistics companies.\")\n",
        "print(\"- **Marketing Message:** Highlight economic benefits (TCO), reliability, and environmental advantages.\")\n",
        "print(\"- **Channels:** Utilize local dealerships, commercial expos, online platforms targeting commercial users, and leverage government incentives.\")\n",
        "print(\"- **Trust Building:** Offer test drives, provide excellent after-sales service, and ensure spare parts availability.\")\n",
        "\n",
        "print(\"### 4. Addressing Challenges and Leveraging Opportunities\\n\")\n",
        "print(\"- **Addressing Charging Infrastructure Gaps:** Partnerships with charging providers and targeting fleet operators with captive charging solutions.\")\n",
        "print(\"- **Mitigating Battery Cost Concerns:** Transparent pricing, warranty policies, and potentially battery-as-a-service models.\")\n",
        "print(\"- **Building Service Network:** Training local mechanics and partnering with existing service providers.\")\n",
        "print(\"- **Leveraging Government Support:** Aligning with and assisting customers in accessing available subsidies and incentives.\")\n",
        "print(\"- **Capitalizing on Commercial Demand:** Direct focus on the high-demand 3W segment driven by last-mile delivery and logistics.\")\n",
        "\n",
        "print(\"\\nThis strategy aims to leverage the identified growth potential and market characteristics of the Early Growth Leaders segment while proactively addressing key challenges in the Indian EV ecosystem.\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "## Key Findings from EV Market Analysis and Proposed Market Entry Strategy in India\n",
            "\n",
            "### 1. Key Insights from Exploratory Data Analysis (EDA)\n",
            "\n",
            "- The Indian EV market is experiencing significant growth, particularly in the **Three Wheeler (3W)** and **Two Wheeler (2W)** segments.\n",
            "- These categories dominate the market in terms of sales volume and exhibit strong upward trends over the past few years.\n",
            "- Light Motor Vehicles (LMV) and Medium Motor Vehicles (MMV) electric vehicle sales are significantly lower compared to 2W and 3W.\n",
            "- Analysis of individual EV makers reveals varying performance, with some showing rapid and sustained growth, indicating successful strategies and market acceptance.\n",
            "### 2. Market Segmentation and Target Segment Identification\n",
            "\n",
            "- K-Means clustering was applied to segment EV makers based on market share, growth rates, and total sales.\n",
            "- Four distinct segments were identified:\n",
            "  - **Cluster 0:** Established Major Players (Highest average sales, moderate market share)\n",
            "  - **Cluster 1:** Minor/Niche Players (Lowest average sales, market share, and growth)\n",
            "  - **Cluster 2:** Struggling Players / Niche Categories (Moderate sales, low share, volatile growth, includes some LMV/MMV makers)\n",
            "  - **Cluster 3:** Early Growth Leaders (Moderate sales, high historical growth, dominated by 3W/2W)\n",
            "- **Cluster 3 (Early Growth Leaders)** was identified as the most promising target segment for market entry.\n",
            "- This segment was chosen due to its demonstrated history of high growth, significant market size, and concentration in the dominant 3W and 2W categories, suggesting receptiveness to new offerings.\n",
            "### 3. Proposed Market Entry Strategy for Early Growth Leaders (Cluster 3)\n",
            "\n",
            "Based on the analysis of Cluster 3, the following market entry strategy is proposed:\n",
            "\n",
            "#### Recommended Vehicle Category Focus:\n",
            "- **Primary Focus: Three Wheelers (3W).** This aligns directly with the dominant category in the target segment and is a high-growth area in the overall market, driven by commercial applications where TCO is a key driver.\n",
            "- **Secondary Focus: Two Wheelers (2W).** As the largest EV segment by volume, the 2W market in this cluster offers potential for broader reach, particularly in personal mobility.\n",
            "#### Suggested Entry Approach:\n",
            "- **Phased Entry Starting with Partnerships/Joint Ventures.** Partnering with existing Indian EV manufacturers (especially those in or adjacent to Cluster 3), battery suppliers, and charging infrastructure companies can mitigate risks related to market understanding, regulations, supply chain, and infrastructure challenges.\n",
            "- **Potential for Independent Expansion or Acquisition:** Once a strong market position is established through partnerships, consider independent operations or acquiring a smaller, strategically aligned player within the segment.\n",
            "#### High-Level Pricing Strategy:\n",
            "- **Value-Based Pricing with a Competitive Edge.** For 3W EVs, emphasize the Total Cost of Ownership (TCO) advantage over ICE vehicles (lower fuel, maintenance costs). Price competitively against existing EV offerings in Cluster 3, potentially offering financing or leasing options to lower the initial purchase barrier.\n",
            "#### Key Marketing and Distribution Considerations:\n",
            "- **Distribution Network:** Build a strong dealer and service network focused on regions with high commercial activity and existing EV adoption. Partner with fleet operators and logistics companies.\n",
            "- **Marketing Message:** Highlight economic benefits (TCO), reliability, and environmental advantages.\n",
            "- **Channels:** Utilize local dealerships, commercial expos, online platforms targeting commercial users, and leverage government incentives.\n",
            "- **Trust Building:** Offer test drives, provide excellent after-sales service, and ensure spare parts availability.\n",
            "### 4. Addressing Challenges and Leveraging Opportunities\n",
            "\n",
            "- **Addressing Charging Infrastructure Gaps:** Partnerships with charging providers and targeting fleet operators with captive charging solutions.\n",
            "- **Mitigating Battery Cost Concerns:** Transparent pricing, warranty policies, and potentially battery-as-a-service models.\n",
            "- **Building Service Network:** Training local mechanics and partnering with existing service providers.\n",
            "- **Leveraging Government Support:** Aligning with and assisting customers in accessing available subsidies and incentives.\n",
            "- **Capitalizing on Commercial Demand:** Direct focus on the high-demand 3W segment driven by last-mile delivery and logistics.\n",
            "\n",
            "This strategy aims to leverage the identified growth potential and market characteristics of the Early Growth Leaders segment while proactively addressing key challenges in the Indian EV ecosystem.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "id": "1b543777",
        "outputId": "442bd236-f1ec-4ed3-ba10-80d4c44a909e"
      },
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Reshape the data for heatmap visualization\n",
        "# We need a matrix where rows are categories and columns are years, or vice-versa\n",
        "# The current sales_by_category DataFrame already has years as index and categories as columns\n",
        "\n",
        "# Calculate the correlation matrix (though for this data, correlation might not be the most intuitive,\n",
        "# a heatmap of the values themselves or normalized values might be more useful to show sales distribution)\n",
        "# Let's create a heatmap of the actual sales values by category and year.\n",
        "\n",
        "plt.figure(figsize=(12, 8))\n",
        "sns.heatmap(sales_by_category, annot=True, fmt=\".1f\", cmap=\"YlGnBu\")\n",
        "plt.title('EV Sales Heatmap by Category and Year (2015-2024)')\n",
        "plt.xlabel('Vehicle Category')\n",
        "plt.ylabel('Year')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 670
        },
        "id": "519ec8b5",
        "outputId": "b8350a2c-6e5a-4e76-ebd1-7ebe9dca56db"
      },
      "source": [
        "# Heatmap of the correlation matrix of the segmentation features\n",
        "\n",
        "plt.figure(figsize=(14, 10))\n",
        "# Calculate the correlation matrix for the segmentation features\n",
        "correlation_matrix = df_segmentation.corr()\n",
        "sns.heatmap(correlation_matrix, annot=False, cmap=\"coolwarm\", fmt=\".2f\")\n",
        "plt.title('Correlation Matrix of Segmentation Features')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x1000 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "6bf51a8b",
        "outputId": "3f83b00c-bb12-4510-bdd2-ac72aa9848b1"
      },
      "source": [
        "# Heatmap of the mean feature values for each cluster\n",
        "\n",
        "plt.figure(figsize=(16, 8))\n",
        "sns.heatmap(cluster_means.T, annot=True, cmap=\"YlGnBu\", fmt=\".4f\")\n",
        "plt.title('Mean Feature Values per Cluster')\n",
        "plt.xlabel('Cluster')\n",
        "plt.ylabel('Feature')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**TASK 3**\n",
        "\n",
        "SUBTASK:  We can visualize the K-Means clustering results by reducing the dimensionality of the data and plotting the data points colored by their assigned clustersin this CSV file \"https://drive/MyDrive/ev_sales_by_makers_and_cat_15-24.csv\""
      ],
      "metadata": {
        "id": "triWcMSqdoIi"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 672
        },
        "id": "1491f8b0",
        "outputId": "51d9cb98-5aed-4fba-aa56-907f09ca6868"
      },
      "source": [
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# Reduce the dimensionality of the scaled data using PCA\n",
        "# Let's reduce to 2 components for a 2D visualization\n",
        "pca = PCA(n_components=2)\n",
        "df_pca = pca.fit_transform(df_segmentation_scaled)\n",
        "\n",
        "# Create a DataFrame with the PCA results and cluster labels\n",
        "df_pca = pd.DataFrame(df_pca, columns=['PC1', 'PC2'])\n",
        "df_pca['Cluster'] = df_ev['Cluster']\n",
        "\n",
        "# Visualize the clusters using a scatter plot\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.scatterplot(x='PC1', y='PC2', hue='Cluster', data=df_pca, palette='viridis', s=100)\n",
        "plt.title('K-Means Clustering Visualization (PCA Reduced Dimensions)')\n",
        "plt.xlabel('Principal Component 1')\n",
        "plt.ylabel('Principal Component 2')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d810dc53"
      },
      "source": [
        "from sklearn.manifold import TSNE\n",
        "\n",
        "# Reduce the dimensionality of the scaled data using t-SNE\n",
        "# It's recommended to first reduce dimensionality with PCA before applying t-SNE to large datasets\n",
        "# Let's use the output of PCA (df_pca without the cluster column) as input to t-SNE\n",
        "# Or, we can apply t-SNE directly to the scaled data, which might take longer.\n",
        "# Let's apply t-SNE directly to the scaled data for a potentially different view.\n",
        "\n",
        "# Note: t-SNE can be computationally intensive and sensitive to parameters (perplexity, learning_rate).\n",
        "# Default parameters are often a good starting point.\n",
        "tsne = TSNE(n_components=2, random_state=42, perplexity=30, n_iter=300)\n",
        "df_tsne = tsne.fit_transform (df_segmentation_scaled)\n",
        "\n",
        "# Create a DataFrame with the t-SNE results and cluster labels\n",
        "df_tsne = pd.DataFrame(df_tsne, columns=['TSNE1', 'TSNE2'])\n",
        "df_tsne['Cluster'] = df_ev['Cluster']\n",
        "\n",
        "# Visualize the clusters using a scatter plot\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.scatterplot(x='TSNE1', y='TSNE2', hue='Cluster', data=df_tsne, palette='viridis', s=100)\n",
        "plt.title('K-Means Clustering Visualization (t-SNE Reduced Dimensions)')\n",
        "plt.xlabel('t-SNE Component 1')\n",
        "plt.ylabel('t-SNE Component 2')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}